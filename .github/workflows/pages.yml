name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '**.md'
      - 'Doxyfile'
      - '.github/workflows/pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Debug repository structure
        run: |
          echo "=== Repository structure ==="
          ls -la
          echo "=== Source files ==="
          find src -name "*.cpp" -o -name "*.h" | head -10
          echo "=== Include files ==="
          find include -name "*.h" | head -10
          echo "=== Documentation files ==="
          find docs -name "*.md" | head -10
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install -g markdownlint-cli
          npm install -g markdown-link-check
          
      - name: Lint markdown
        run: |
          echo "=== Linting markdown files ==="
          if [ -f ".markdownlint.yml" ]; then
            markdownlint "**/*.md" --config .markdownlint.yml || echo "Markdown linting completed with warnings"
          else
            markdownlint "**/*.md" || echo "Markdown linting completed with warnings"
          fi
        
      - name: Check links
        run: |
          echo "=== Checking markdown links ==="
          files=$(git ls-files '*.md')
          for f in $files; do 
            if [ -f "$f" ]; then
              echo "Checking links in: $f"
              markdown-link-check -q "$f" || echo "Link check failed for $f, continuing..."
            fi
          done
          
      - name: Install Doxygen
        run: |
          echo "=== Installing Doxygen ==="
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz
          doxygen --version
          
      - name: Generate documentation
        run: |
          echo "=== Generating Doxygen documentation ==="
          if [ -f "Doxyfile" ]; then
            echo "Doxyfile found, generating documentation..."
            doxygen Doxyfile
            echo "Doxygen generation completed"
            
            if [ -d "docs/html" ]; then
              echo "‚úÖ docs/html directory created successfully"
              echo "=== Contents of docs/html ==="
              ls -la docs/html/
              echo "=== Number of files generated ==="
              find docs/html -type f | wc -l
            else
              echo "‚ùå docs/html directory not found after Doxygen generation"
              echo "Creating fallback structure..."
              mkdir -p docs/html
            fi
          else
            echo "‚ùå Doxyfile not found, creating basic documentation structure"
            mkdir -p docs/html
          fi
          
      - name: Create main page
        run: |
          echo "=== Creating main page ==="
          if [ ! -d "docs/html" ]; then
            mkdir -p docs/html
          fi
          
          # –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞—à –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π index.md –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ HTML
          if [ -f "docs/index.md" ]; then
            echo "‚úÖ Using existing docs/index.md"
            cp docs/index.md docs/html/index.md
          else
            echo "‚ùå docs/index.md not found, creating fallback"
            echo "# üå± JXCT 7-–≤-1 –î–∞—Ç—á–∏–∫ –ü–æ—á–≤—ã" > docs/html/index.md
            echo "" >> docs/html/index.md
            echo "–£–º–Ω—ã–π –¥–∞—Ç—á–∏–∫ –ø–æ—á–≤—ã —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ—á–≤—ã" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "## üìä –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "### üå°Ô∏è 7 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –¥–∞—Ç—á–∏–∫–µ" >> docs/html/index.md
            echo "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –≤–ª–∞–∂–Ω–æ—Å—Ç—å, EC, pH, –∞–∑–æ—Ç, —Ñ–æ—Å—Ñ–æ—Ä, –∫–∞–ª–∏–π —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "### üî¨ –ù–∞—É—á–Ω–∞—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è" >> docs/html/index.md
            echo "–ú–æ–¥–µ–ª—å –ê—Ä—á–∏, —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –ù–µ—Ä–Ω—Å—Ç–∞, FAO 56 –¥–ª—è —Ç–æ—á–Ω—ã—Ö –∏–∑–º–µ—Ä–µ–Ω–∏–π" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "### üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å" >> docs/html/index.md
            echo "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω, OTA –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "### üîß ESP32 + PlatformIO" >> docs/html/index.md
            echo "–ú–æ—â–Ω—ã–π –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å WiFi, MQTT, ThingSpeak –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "–ü–æ–ª–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤, —Ñ—É–Ω–∫—Ü–∏–π –∏ API." >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "## üîó –°—Å—ã–ª–∫–∏" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "üì¶ GitHub Repository üöÄ Releases üêõ Issues üí¨ Telegram Support" >> docs/html/index.md
            echo "" >> docs/html/index.md
            echo "**–í–µ—Ä—Å–∏—è:** 3.4.9 | **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ESP32 + PlatformIO | **–õ–∏—Ü–µ–Ω–∑–∏—è:** MIT" >> docs/html/index.md
          fi
          
          echo "‚úÖ Main page created successfully"
          
      - name: Verify documentation structure
        run: |
          echo "=== Verifying documentation structure ==="
          echo "Checking docs/html directory structure:"
          ls -la docs/html/
          if [ -f "docs/html/index.md" ]; then
            echo "‚úÖ Main page exists"
          else
            echo "‚ùå Main page not found"
            exit 1
          fi
          
          echo "=== Final structure ==="
          find docs/html -type f | head -20
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/html'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 