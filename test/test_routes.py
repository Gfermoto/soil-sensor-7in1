#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ JXCT
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤
"""

import os
import re
import sys
import unittest

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º stdout –≤ utf-8 –¥–ª—è Windows
if hasattr(sys.stdout, 'encoding') and sys.stdout.encoding and sys.stdout.encoding.lower() not in ['utf-8', 'utf8']:
    try:
        sys.stdout = open(sys.stdout.fileno(), mode='w', encoding='utf-8', buffering=1)
    except Exception:
        pass

# –ö–∞—Ç–∞–ª–æ–≥–∏ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏
SRC_DIRS = [
    os.path.join(os.path.dirname(__file__), os.pardir, 'src', 'web'),
]

# –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è
REQUIRED_ROUTES = {
    '/api/config/import': 'routes_config.cpp',
    '/api/v1/config/export': 'routes_config.cpp',
}

def test_required_routes_exist():
    """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤"""
    print("üîó –¢–ï–°–¢ –ú–ê–†–®–†–£–¢–û–í JXCT")
    print("=" * 40)
    
    passed = 0
    total = len(REQUIRED_ROUTES)
    
    for route, expected_file in REQUIRED_ROUTES.items():
        found = False
        for src_dir in SRC_DIRS:
            if os.path.exists(src_dir):
                for root, _dirs, files in os.walk(src_dir):
                    for fname in files:
                        if fname.endswith('.cpp') and expected_file in fname:
                            path = os.path.join(root, fname)
                            try:
                                with open(path, 'r', encoding='utf-8') as f:
                                    content = f.read()
                                    if route in content:
                                        found = True
                                        print(f"  ‚úÖ –ú–∞—Ä—à—Ä—É—Ç '{route}' –Ω–∞–π–¥–µ–Ω –≤ {fname}")
                                        passed += 1
                                        break
                            except Exception as e:
                                print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {fname}: {e}")
                    if found:
                        break
                if found:
                    break
        
        if not found:
            print(f"  ‚ùå –ú–∞—Ä—à—Ä—É—Ç '{route}' –ù–ï –Ω–∞–π–¥–µ–Ω –≤ {expected_file}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total}")
    print(f"üéØ {'‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù' if passed == total else '‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù'}")
    
    assert passed == total, f"–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –Ω–∞–π–¥–µ–Ω—ã: {passed}/{total}"

if __name__ == '__main__':
    success = test_required_routes_exist()
    sys.exit(0 if success else 1)
