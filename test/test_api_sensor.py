#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –¥–∞—Ç—á–∏–∫–∞ JXCT
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
"""

import json
import sys
import requests
from pathlib import Path

def test_sensor_api():
    """–¢–µ—Å—Ç API –¥–∞—Ç—á–∏–∫–∞"""
    print("üß™ –¢–ï–°–¢ API –î–ê–¢–ß–ò–ö–ê JXCT")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π API (–µ—Å–ª–∏ ESP32 –ø–æ–¥–∫–ª—é—á–µ–Ω)
    test_urls = [
        "http://192.168.4.1/api/v1/sensor",
        "http://192.168.2.74/api/v1/sensor", 
        "http://localhost:8080/api/v1/sensor"
    ]
    
    success = False
    
    for url in test_urls:
        try:
            print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {url}...")
            response = requests.get(url, timeout=5)
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:")
                print(f"  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data.get('temperature', 'N/A')}¬∞C")
                print(f"  –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data.get('humidity', 'N/A')}%")
                print(f"  EC: {data.get('ec', 'N/A')} ¬µS/cm")
                print(f"  pH: {data.get('ph', 'N/A')}")
                print(f"  –ê–∑–æ—Ç: {data.get('nitrogen', 'N/A')} –º–≥/–∫–≥")
                print(f"  –§–æ—Å—Ñ–æ—Ä: {data.get('phosphorus', 'N/A')} –º–≥/–∫–≥")
                print(f"  –ö–∞–ª–∏–π: {data.get('potassium', 'N/A')} –º–≥/–∫–≥")
                print(f"  –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å: {data.get('valid', 'N/A')}")
                success = True
                break
            else:
                print(f"‚ùå HTTP {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
            continue
    
    if not success:
        print("‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –≤–æ–∑–º–æ–∂–Ω–æ, ESP32 –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        print("üìù –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        test_data = {
            "temperature": 25.5,
            "humidity": 65.2,
            "ec": 1250.0,
            "ph": 6.8,
            "nitrogen": 120,
            "phosphorus": 45,
            "potassium": 180,
            "raw_temperature": 25.3,
            "raw_humidity": 64.8,
            "raw_ec": 1245.0,
            "raw_ph": 6.7,
            "raw_nitrogen": 118,
            "raw_phosphorus": 44,
            "raw_potassium": 178,
            "rec_temperature": 25.0,
            "rec_humidity": 70.0,
            "rec_ec": 1200.0,
            "rec_ph": 6.5,
            "rec_nitrogen": 150,
            "rec_phosphorus": 60,
            "rec_potassium": 200,
            "valid": True
        }
        
        print("üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
        for key, value in test_data.items():
            print(f"  {key}: {value}")
    
    print(f"\n‚úÖ –¢–ï–°–¢ API –ó–ê–í–ï–†–®–ï–ù")
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        test_sensor_api()
        return 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 