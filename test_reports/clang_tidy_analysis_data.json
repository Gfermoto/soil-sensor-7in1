[
  {
    "file": "src/advanced_filters.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:24:11: warning: use default member initializer for 'smoothed_value' [modernize-use-default-member-init]\n   24 |     float smoothed_value;\n      |           ^             \n      |                         {0.0F}\n   25 |     bool initialized;\n   26 | \n   27 |     ExponentialSmoothingState() : smoothed_value(0.0F), initialized(false) {}\n      |                                   ~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:25:10: warning: use default member initializer for 'initialized' [modernize-use-default-member-init]\n   25 |     bool initialized;\n      |          ^          \n      |                     {false}\n   26 | \n   27 |     ExponentialSmoothingState() : smoothed_value(0.0F), initialized(false) {}\n      |                                                         ~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:30:34: warning: variable 'exp_smooth_temp' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   30 | static ExponentialSmoothingState exp_smooth_temp;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:31:34: warning: variable 'exp_smooth_hum' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   31 | static ExponentialSmoothingState exp_smooth_hum;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:32:34: warning: variable 'exp_smooth_ec' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   32 | static ExponentialSmoothingState exp_smooth_ec;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:33:34: warning: variable 'exp_smooth_ph' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   33 | static ExponentialSmoothingState exp_smooth_ph;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:34:34: warning: variable 'exp_smooth_n' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   34 | static ExponentialSmoothingState exp_smooth_n;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:35:34: warning: variable 'exp_smooth_p' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   35 | static ExponentialSmoothingState exp_smooth_p;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:36:34: warning: variable 'exp_smooth_k' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   36 | static ExponentialSmoothingState exp_smooth_k;\n      |                                  ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:38:7: warning: function 'applyExponentialSmoothing' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   38 | float applyExponentialSmoothing(float new_value, ExponentialSmoothingState& state, float alpha) {\n      |       ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:56:13: warning: use default member initializer for 'index' [modernize-use-default-member-init]\n   56 |     uint8_t index;\n      |             ^    \n      |                  {0}\n   57 |     uint8_t filled;\n   58 |     float mean;\n   59 |     float std_dev;\n   60 |     bool valid;\n   61 | \n   62 |     StatisticsBuffer() : index(0), filled(0), mean(0.0F), std_dev(0.0F), valid(false) {\n      |                          ~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:57:13: warning: use default member initializer for 'filled' [modernize-use-default-member-init]\n   57 |     uint8_t filled;\n      |             ^     \n      |                   {0}\n   58 |     float mean;\n   59 |     float std_dev;\n   60 |     bool valid;\n   61 | \n   62 |     StatisticsBuffer() : index(0), filled(0), mean(0.0F), std_dev(0.0F), valid(false) {\n      |                                    ~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:58:11: warning: use default member initializer for 'mean' [modernize-use-default-member-init]\n   58 |     float mean;\n      |           ^   \n      |               {0.0F}\n   59 |     float std_dev;\n   60 |     bool valid;\n   61 | \n   62 |     StatisticsBuffer() : index(0), filled(0), mean(0.0F), std_dev(0.0F), valid(false) {\n      |                                               ~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:59:11: warning: use default member initializer for 'std_dev' [modernize-use-default-member-init]\n   59 |     float std_dev;\n      |           ^      \n      |                  {0.0F}\n   60 |     bool valid;\n   61 | \n   62 |     StatisticsBuffer() : index(0), filled(0), mean(0.0F), std_dev(0.0F), valid(false) {\n      |                                                           ~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:60:10: warning: use default member initializer for 'valid' [modernize-use-default-member-init]\n   60 |     bool valid;\n      |          ^    \n      |               {false}\n   61 | \n   62 |     StatisticsBuffer() : index(0), filled(0), mean(0.0F), std_dev(0.0F), valid(false) {\n      |                                                                          ~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:68:6: warning: function 'updateStatistics' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   68 | void updateStatistics(float new_value, StatisticsBuffer& buffer);\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:69:6: warning: function 'isOutlier' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   69 | bool isOutlier(float value, const StatisticsBuffer& buffer, float threshold_multiplier);\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:70:7: warning: function 'applyECSpecializedFilter' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   70 | float applyECSpecializedFilter(float raw_value);\n      |       ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:72:25: warning: variable 'stats_temp' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   72 | static StatisticsBuffer stats_temp;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:73:25: warning: variable 'stats_hum' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   73 | static StatisticsBuffer stats_hum;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:74:25: warning: variable 'stats_ec' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   74 | static StatisticsBuffer stats_ec;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:75:25: warning: variable 'stats_ph' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   75 | static StatisticsBuffer stats_ph;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:76:25: warning: variable 'stats_n' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   76 | static StatisticsBuffer stats_n;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:77:25: warning: variable 'stats_p' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   77 | static StatisticsBuffer stats_p;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:78:25: warning: variable 'stats_k' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   78 | static StatisticsBuffer stats_k;\n      |                         ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:105:5: warning: use `std::max` instead of `<` [readability-use-std-min-max]\n  105 |     if (buffer.std_dev < MIN_STANDARD_DEVIATION) {\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |     buffer.std_dev = std::max(buffer.std_dev, MIN_STANDARD_DEVIATION);\n  106 |         buffer.std_dev = MIN_STANDARD_DEVIATION;\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  107 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:118:5: warning: variable 'threshold' of type 'float' can be declared 'const' [misc-const-correctness]\n  118 |     float threshold = threshold_multiplier * buffer.std_dev;\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:128:11: warning: use default member initializer for 'x' [modernize-use-default-member-init]\n  128 |     float x;      // Состояние (оценка)\n      |           ^\n      |            {0.0F}\n  129 |     float P;      // Ковариация ошибки оценки\n  130 |     float Q;      // Шум процесса\n  131 |     float R;      // Шум измерений\n  132 |     bool initialized;\n  133 | \n  134 |     KalmanFilter(float process_noise, float measurement_noise)\n  135 |         : x(0.0F), P(KALMAN_INITIAL_UNCERTAINTY), Q(process_noise), R(measurement_noise), initialized(false) {}\n      |           ~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:132:10: warning: use default member initializer for 'initialized' [modernize-use-default-member-init]\n  132 |     bool initialized;\n      |          ^          \n      |                     {false}\n  133 | \n  134 |     KalmanFilter(float process_noise, float measurement_noise)\n  135 |         : x(0.0F), P(KALMAN_INITIAL_UNCERTAINTY), Q(process_noise), R(measurement_noise), initialized(false) {}\n      |                                                                                           ~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:134:18: warning: 2 adjacent parameters of 'KalmanFilter' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  134 |     KalmanFilter(float process_noise, float measurement_noise)\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:134:24: note: the first parameter in the range is 'process_noise'\n  134 |     KalmanFilter(float process_noise, float measurement_noise)\n      |                        ^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:134:45: note: the last parameter in the range is 'measurement_noise'\n  134 |     KalmanFilter(float process_noise, float measurement_noise)\n      |                                             ^~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:145:9: warning: variable 'P_pred' of type 'float' can be declared 'const' [misc-const-correctness]\n  145 |         float P_pred = P + Q;\n      |         ^\n      |               const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:148:9: warning: variable 'K' of type 'float' can be declared 'const' [misc-const-correctness]\n  148 |         float K = P_pred / (P_pred + R); // Коэффициент Калмана\n      |         ^\n      |               const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:148:15: warning: variable name 'K' is too short, expected at least 3 characters [readability-identifier-length]\n  148 |         float K = P_pred / (P_pred + R); // Коэффициент Калмана\n      |               ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:162:21: warning: variable 'kalman_temp' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  162 | static KalmanFilter kalman_temp(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:163:21: warning: variable 'kalman_hum' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  163 | static KalmanFilter kalman_hum(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:164:21: warning: variable 'kalman_ec' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  164 | static KalmanFilter kalman_ec(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:165:21: warning: variable 'kalman_ph' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  165 | static KalmanFilter kalman_ph(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:166:21: warning: variable 'kalman_n' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  166 | static KalmanFilter kalman_n(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:167:21: warning: variable 'kalman_p' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  167 | static KalmanFilter kalman_p(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:168:21: warning: variable 'kalman_k' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  168 | static KalmanFilter kalman_k(KALMAN_PROCESS_NOISE, KALMAN_MEASUREMENT_NOISE);\n      |                     ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:174:7: warning: function 'applyCombinedFilter' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  174 | float applyCombinedFilter(float raw_value, FilterType type, bool enable_kalman, bool enable_adaptive) {\n      |       ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:195:13: warning: implicit conversion 'StatisticsBuffer *' -> 'bool' [readability-implicit-bool-conversion]\n  195 |         if (buffer) {\n      |             ^     \n      |                    != nullptr\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:253:9: warning: implicit conversion 'ExponentialSmoothingState *' -> 'bool' [readability-implicit-bool-conversion]\n  253 |     if (exp_state) {\n      |         ^        \n      |                   != nullptr\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:270:13: warning: implicit conversion 'KalmanFilter *' -> 'bool' [readability-implicit-bool-conversion]\n  270 |         if (kalman) {\n      |             ^     \n      |                    != nullptr\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:284:13: warning: use default member initializer for 'index' [modernize-use-default-member-init]\n  284 |     uint8_t index;\n      |             ^    \n      |                  {0}\n  285 |     uint8_t filled;\n  286 |     float baseline;                       // Базовое значение\n  287 |     uint32_t last_spike_time;             // Время последнего выброса\n  288 |     uint8_t spike_count;                  // Счетчик выбросов\n  289 |     bool baseline_valid;\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n      |                       ~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:285:13: warning: use default member initializer for 'filled' [modernize-use-default-member-init]\n  285 |     uint8_t filled;\n      |             ^     \n      |                   {0}\n  286 |     float baseline;                       // Базовое значение\n  287 |     uint32_t last_spike_time;             // Время последнего выброса\n  288 |     uint8_t spike_count;                  // Счетчик выбросов\n  289 |     bool baseline_valid;\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n      |                                 ~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:286:11: warning: use default member initializer for 'baseline' [modernize-use-default-member-init]\n  286 |     float baseline;                       // Базовое значение\n      |           ^       \n      |                   {0.0F}\n  287 |     uint32_t last_spike_time;             // Время последнего выброса\n  288 |     uint8_t spike_count;                  // Счетчик выбросов\n  289 |     bool baseline_valid;\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n      |                                            ~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:287:14: warning: use default member initializer for 'last_spike_time' [modernize-use-default-member-init]\n  287 |     uint32_t last_spike_time;             // Время последнего выброса\n      |              ^              \n      |                             {0}\n  288 |     uint8_t spike_count;                  // Счетчик выбросов\n  289 |     bool baseline_valid;\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n  292 |                      last_spike_time(0), spike_count(0), baseline_valid(false) {\n      |                      ~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:288:13: warning: use default member initializer for 'spike_count' [modernize-use-default-member-init]\n  288 |     uint8_t spike_count;                  // Счетчик выбросов\n      |             ^          \n      |                        {0}\n  289 |     bool baseline_valid;\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n  292 |                      last_spike_time(0), spike_count(0), baseline_valid(false) {\n      |                                          ~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:289:10: warning: use default member initializer for 'baseline_valid' [modernize-use-default-member-init]\n  289 |     bool baseline_valid;\n      |          ^             \n      |                        {false}\n  290 | \n  291 |     ECFilterState() : index(0), filled(0), baseline(0.0F),\n  292 |                      last_spike_time(0), spike_count(0), baseline_valid(false) {\n      |                                                          ~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:297:22: warning: variable 'ec_filter_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  297 | static ECFilterState ec_filter_state;\n      |                      ^\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:300:6: warning: function 'isECSpikePattern' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  300 | bool isECSpikePattern(float new_value, float baseline) {\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:305:5: warning: variable 'spike_threshold' of type 'float' can be declared 'const' [misc-const-correctness]\n  305 |     float spike_threshold = baseline * 0.15F; // 15% от базового значения\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:306:5: warning: variable 'spike_height' of type 'float' can be declared 'const' [misc-const-correctness]\n  306 |     float spike_height = new_value - baseline;\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:314:5: warning: variable 'current_time' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]\n  314 |     uint32_t current_time = millis();\n      |     ^\n      |              const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:315:5: warning: variable 'time_since_last' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]\n  315 |     uint32_t time_since_last = current_time - ec_filter_state.last_spike_time;\n      |     ^\n      |              const \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:332:6: warning: function 'updateECBaseline' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  332 | void updateECBaseline(float new_value) {\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\advanced_filters.cpp:348:37: warning: statement should be inside braces [readability-braces-around-statements]\n  348 |     if (ec_filter_state.filled < 10) ec_filter_state.filled++;\n      |                                     ^                         \n      |                                      {\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:381:10: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  381 |     if (!config.adaptiveFiltering && !config.kalmanEnabled) {\n      |         ~^\n      |         (                         == 0u)\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:381:39: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  381 |     if (!config.adaptiveFiltering && !config.kalmanEnabled) {\n      |                                      ~^                   \n      |                                      (                     == 0u)\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:387:42: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  387 |                                          config.kalmanEnabled, config.adaptiveFiltering);\n      |                                          ^                   \n      |                                                               != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:387:64: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  387 |                                          config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                                ^                       \n      |                                                                                         != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:389:39: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  389 |                                       config.kalmanEnabled, config.adaptiveFiltering);\n      |                                       ^                   \n      |                                                            != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:389:61: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  389 |                                       config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                             ^                       \n      |                                                                                      != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:391:33: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  391 |                                 config.kalmanEnabled, config.adaptiveFiltering);\n      |                                 ^                   \n      |                                                      != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:391:55: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  391 |                                 config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                       ^                       \n      |                                                                                != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:393:33: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  393 |                                 config.kalmanEnabled, config.adaptiveFiltering);\n      |                                 ^                   \n      |                                                      != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:393:55: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  393 |                                 config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                       ^                       \n      |                                                                                != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:395:39: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  395 |                                       config.kalmanEnabled, config.adaptiveFiltering);\n      |                                       ^                   \n      |                                                            != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:395:61: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  395 |                                       config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                             ^                       \n      |                                                                                      != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:397:41: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  397 |                                         config.kalmanEnabled, config.adaptiveFiltering);\n      |                                         ^                   \n      |                                                              != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:397:63: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  397 |                                         config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                               ^                       \n      |                                                                                        != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:399:40: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  399 |                                        config.kalmanEnabled, config.adaptiveFiltering);\n      |                                        ^                   \n      |                                                             != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:399:62: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  399 |                                        config.kalmanEnabled, config.adaptiveFiltering);\n      |                                                              ^                       \n      |                                                                                       != 0u\nC:\\Git\\JXCT\\src\\advanced_filters.cpp:437:10: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]\n  437 |     if (!config.adaptiveFiltering) {\n      |         ~^                       \n      |                                   == 0u\ninclude\\advanced_filters.h:11:10: error: 'array' file not found [clang-diagnostic-error]\n   11 | #include <array>\n      |          ^~~~~~~\n",
    "stderr": "8582 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\advanced_filters.cpp.\n"
  },
  {
    "file": "src/calibration_manager.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8419 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\calibration_manager.cpp.\n"
  },
  {
    "file": "src/config.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\WString.h:28:10: error: 'stdlib.h' file not found [clang-diagnostic-error]\n   28 | #include <stdlib.h>\n      |          ^~~~~~~~~~\n",
    "stderr": "2528 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\config.cpp.\n"
  },
  {
    "file": "src/fake_sensor.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Esp.h:23:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n   23 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:197:10: note: 'Esp.h' included from here\n  197 | #include \"Esp.h\"\n      |          ^\nsrc\\fake_sensor.cpp:7:10: note: 'Arduino.h' included from here\n    7 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\io_pin_remap.h:4:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n    4 | #include \"Arduino.h\"\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:235:10: note: 'io_pin_remap.h' included from here\n  235 | #include \"io_pin_remap.h\"\n      |          ^\nsrc\\fake_sensor.cpp:7:10: note: 'Arduino.h' included from here\n    7 | #include <Arduino.h>\n      |          ^\n",
    "stderr": "8493 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\fake_sensor.cpp.\n"
  },
  {
    "file": "src/jxct_format_utils.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8392 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\jxct_format_utils.cpp.\n"
  },
  {
    "file": "src/jxct_ui_system.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8394 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\jxct_ui_system.cpp.\n"
  },
  {
    "file": "src/logger.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8859 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\logger.cpp.\n"
  },
  {
    "file": "src/main.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Esp.h:23:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n   23 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:197:10: note: 'Esp.h' included from here\n  197 | #include \"Esp.h\"\n      |          ^\nsrc\\main.cpp:9:10: note: 'Arduino.h' included from here\n    9 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\io_pin_remap.h:4:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n    4 | #include \"Arduino.h\"\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:235:10: note: 'io_pin_remap.h' included from here\n  235 | #include \"io_pin_remap.h\"\n      |          ^\nsrc\\main.cpp:9:10: note: 'Arduino.h' included from here\n    9 | #include <Arduino.h>\n      |          ^\n",
    "stderr": "10999 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\main.cpp.\n"
  },
  {
    "file": "src/modbus_sensor.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8540 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\modbus_sensor.cpp.\n"
  },
  {
    "file": "src/mqtt_client.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "9942 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\mqtt_client.cpp.\n"
  },
  {
    "file": "src/ota_manager.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "10752 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\ota_manager.cpp.\n"
  },
  {
    "file": "src/routes_calibration.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\libraries\\FS\\src\\FS.h:24:10: error: 'memory' file not found [clang-diagnostic-error]\n   24 | #include <memory>\n      |          ^~~~~~~~\n",
    "stderr": "8996 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\routes_calibration.cpp.\n"
  },
  {
    "file": "src/sensor_compensation.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8443 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\sensor_compensation.cpp.\n"
  },
  {
    "file": "src/thingspeak_client.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "9239 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\thingspeak_client.cpp.\n"
  },
  {
    "file": "src/validation_utils.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8429 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\validation_utils.cpp.\n"
  },
  {
    "file": "src/wifi_manager.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "10126 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\wifi_manager.cpp.\n"
  },
  {
    "file": "src/business/crop_recommendation_engine.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:146:5: warning: variable 'config' of type 'CropConfig' can be declared 'const' [misc-const-correctness]\n  146 |     CropConfig config = getCropConfig(cropId);\n      |     ^\n      |                const \nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:165:5: warning: variable 'currentSeason' of type 'Season' can be declared 'const' [misc-const-correctness]\n  165 |     Season currentSeason = getCurrentSeason();\n      |     ^\n      |            const \nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:166:5: warning: variable 'isGreenhouse' of type 'bool' can be declared 'const' [misc-const-correctness]\n  166 |     bool isGreenhouse = (envType == EnvironmentType::GREENHOUSE);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:178:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  178 |     auto it = seasonalAdjustments.find(season);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:237:32: warning: method 'applySoilProfileCorrection' can be made static [readability-convert-member-functions-to-static]\n  237 | void CropRecommendationEngine::applySoilProfileCorrection(RecValues& rec, SoilProfile soilProfile) {\n      |                                ^\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:260:32: warning: method 'applyEnvironmentCorrection' can be made static [readability-convert-member-functions-to-static]\n  260 | void CropRecommendationEngine::applyEnvironmentCorrection(RecValues& rec, EnvironmentType envType) {\n      |                                ^\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:281:34: warning: method 'getCurrentSeason' can be made static [readability-convert-member-functions-to-static]\n  281 | Season CropRecommendationEngine::getCurrentSeason() const {\n      |                                  ^                  ~~~~~\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:286:10: warning: implicit conversion 'struct tm *' -> 'bool' [readability-implicit-bool-conversion]\n  286 |     if (!timeInfo) {\n      |         ~^       \n      |                   == nullptr\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:295:7: warning: do not use 'else' after 'return' [readability-else-after-return]\n  295 |     } else if (month >= 6 && month <= 8) {\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  296 |         return Season::SUMMER;\n      |         ~~~~~~~~~~~~~~~~~~~~~~\n  297 |     } else if (month >= 9 && month <= 11) {\n      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  298 |         return Season::AUTUMN;\n      |         ~~~~~~~~~~~~~~~~~~~~~~\n  299 |     } else {\n      |     ~~~~~~~~\n  300 |         return Season::WINTER;\n      |         ~~~~~~~~~~~~~~~~~~~~~~\n  301 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:304:38: warning: method 'getCropConfig' can be made static [readability-convert-member-functions-to-static]\n  304 | CropConfig CropRecommendationEngine::getCropConfig(const String& cropId) const {\n      |                                      ^                                   ~~~~~\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp:305:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  305 |     auto it = cropConfigs.find(cropId);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.h:10:10: error: 'map' file not found [clang-diagnostic-error]\n   10 | #include <map>\n      |          ^~~~~\n",
    "stderr": "8481 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\business\\crop_recommendation_engine.cpp.\n"
  },
  {
    "file": "src/business/sensor_calibration_service.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:141:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  141 |     auto it = calibrationTables.find(profile);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:146:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  146 |     auto it = calibrationTables.find(profile);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:153:34: warning: method 'getCalibrationPointsCount' can be made static [readability-convert-member-functions-to-static]\n  153 | size_t SensorCalibrationService::getCalibrationPointsCount(SoilProfile profile, const String& sensorType) const {\n      |                                  ^                                                                        ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:154:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  154 |     auto it = calibrationTables.find(profile);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:160:37: warning: statement should be inside braces [readability-braces-around-statements]\n  160 |     if (sensorType == \"temperature\") return table.temperaturePoints.size();\n      |                                     ^                                      \n      |                                      {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:161:34: warning: statement should be inside braces [readability-braces-around-statements]\n  161 |     if (sensorType == \"humidity\") return table.humidityPoints.size();\n      |                                  ^                                   \n      |                                   {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:162:28: warning: statement should be inside braces [readability-braces-around-statements]\n  162 |     if (sensorType == \"ec\") return table.ecPoints.size();\n      |                            ^                             \n      |                             {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:163:28: warning: statement should be inside braces [readability-braces-around-statements]\n  163 |     if (sensorType == \"ph\") return table.phPoints.size();\n      |                            ^                             \n      |                             {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:164:34: warning: statement should be inside braces [readability-braces-around-statements]\n  164 |     if (sensorType == \"nitrogen\") return table.nitrogenPoints.size();\n      |                                  ^                                   \n      |                                   {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:165:36: warning: statement should be inside braces [readability-braces-around-statements]\n  165 |     if (sensorType == \"phosphorus\") return table.phosphorusPoints.size();\n      |                                    ^                                     \n      |                                     {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:166:35: warning: statement should be inside braces [readability-braces-around-statements]\n  166 |     if (sensorType == \"potassium\") return table.potassiumPoints.size();\n      |                                   ^                                    \n      |                                    {\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:171:34: warning: method 'exportCalibrationTable' can be made static [readability-convert-member-functions-to-static]\n  171 | String SensorCalibrationService::exportCalibrationTable(SoilProfile profile) const {\n      |                                  ^                                           ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:172:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  172 |     auto it = calibrationTables.find(profile);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:178:5: warning: variable 'csv' of type 'String' can be declared 'const' [misc-const-correctness]\n  178 |     String csv = \"sensor_type,raw_value,reference_value\\n\";\n      |     ^\n      |            const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:228:7: warning: do not use 'else' after 'return' [readability-else-after-return]\n  228 |     } else {\n      |       ^~~~~~\n  229 |         return points[points.size() - 1].referenceValue;\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  230 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:33: warning: method 'linearInterpolation' can be made static [readability-convert-member-functions-to-static]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                 ^                                                                    ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:59: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                                           ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:68: warning: parameter name 'x1' is too short, expected at least 3 characters [readability-identifier-length]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                                                    ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:78: warning: parameter name 'y1' is too short, expected at least 3 characters [readability-identifier-length]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                                                              ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:88: warning: parameter name 'x2' is too short, expected at least 3 characters [readability-identifier-length]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                                                                        ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:233:98: warning: parameter name 'y2' is too short, expected at least 3 characters [readability-identifier-length]\n  233 | float SensorCalibrationService::linearInterpolation(float x, float x1, float y1, float x2, float y2) const {\n      |                                                                                                  ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:237:17: warning: '/' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n  237 |     return y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                 (                               )\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:240:32: warning: method 'parseCalibrationCSV' can be made static [readability-convert-member-functions-to-static]\n  240 | bool SensorCalibrationService::parseCalibrationCSV(const String& csvData, CalibrationTable& table) {\n      |                                ^\nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:255:9: warning: variable 'line' of type 'String' can be declared 'const' [misc-const-correctness]\n  255 |         String line = csvData.substring(startPos, endPos);\n      |         ^\n      |                const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:258:13: warning: variable 'comma1' of type 'int' can be declared 'const' [misc-const-correctness]\n  258 |             int comma1 = line.indexOf(',');\n      |             ^\n      |                 const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:259:13: warning: variable 'comma2' of type 'int' can be declared 'const' [misc-const-correctness]\n  259 |             int comma2 = line.indexOf(',', comma1 + 1);\n      |             ^\n      |                 const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:262:17: warning: variable 'sensorType' of type 'String' can be declared 'const' [misc-const-correctness]\n  262 |                 String sensorType = line.substring(0, comma1);\n      |                 ^\n      |                        const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:263:17: warning: variable 'rawValue' of type 'float' can be declared 'const' [misc-const-correctness]\n  263 |                 float rawValue = line.substring(comma1 + 1, comma2).toFloat();\n      |                 ^\n      |                       const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:264:17: warning: variable 'referenceValue' of type 'float' can be declared 'const' [misc-const-correctness]\n  264 |                 float referenceValue = line.substring(comma2 + 1).toFloat();\n      |                 ^\n      |                       const \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp:299:32: warning: method 'validateCalibrationPoints' can be made static [readability-convert-member-functions-to-static]\n  299 | bool SensorCalibrationService::validateCalibrationPoints(const std::vector<CalibrationPoint>& points) const {\n      |                                ^                                                                      ~~~~~\n      | static \nC:\\Git\\JXCT\\src\\business\\sensor_calibration_service.h:10:10: error: 'map' file not found [clang-diagnostic-error]\n   10 | #include <map>\n      |          ^~~~~\n",
    "stderr": "8499 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\business\\sensor_calibration_service.cpp.\n"
  },
  {
    "file": "src/business/sensor_compensation_service.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:36:44: warning: 2 adjacent parameters of 'correctEC' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   36 | float SensorCompensationService::correctEC(float ec25, float temperature, float humidity, SoilType soilType) {\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:36:50: note: the first parameter in the range is 'ec25'\n   36 | float SensorCompensationService::correctEC(float ec25, float temperature, float humidity, SoilType soilType) {\n      |                                                  ^~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:36:62: note: the last parameter in the range is 'temperature'\n   36 | float SensorCompensationService::correctEC(float ec25, float temperature, float humidity, SoilType soilType) {\n      |                                                              ^~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:43:5: warning: variable 'coeffs' of type 'ArchieCoefficients' can be declared 'const' [misc-const-correctness]\n   43 |     ArchieCoefficients coeffs = getArchieCoefficients(soilType);\n      |     ^\n      |                        const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:46:5: warning: variable 'tempFactor' of type 'float' can be declared 'const' [misc-const-correctness]\n   46 |     float tempFactor = calculateECTemperatureFactor(temperature);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:49:5: warning: variable 'humidityFactor' of type 'float' can be declared 'const' [misc-const-correctness]\n   49 |     float humidityFactor = calculateECHumidityFactor(humidity, soilType);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:58:44: warning: 2 adjacent parameters of 'correctPH' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   58 | float SensorCompensationService::correctPH(float phRaw, float temperature) {\n      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:58:50: note: the first parameter in the range is 'phRaw'\n   58 | float SensorCompensationService::correctPH(float phRaw, float temperature) {\n      |                                                  ^~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:58:63: note: the last parameter in the range is 'temperature'\n   58 | float SensorCompensationService::correctPH(float phRaw, float temperature) {\n      |                                                               ^~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:65:5: warning: variable 'tempKelvin' of type 'float' can be declared 'const' [misc-const-correctness]\n   65 |     float tempKelvin = temperatureToKelvin(temperature);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:68:5: warning: variable 'compensatedPH' of type 'float' can be declared 'const' [misc-const-correctness]\n   68 |     float compensatedPH = phRaw + tempCorrection;\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:81:5: warning: variable 'params' of type 'SoilParameters' can be declared 'const' [misc-const-correctness]\n   81 |     SoilParameters params = getSoilParameters(soilType);\n      |     ^\n      |                    const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:84:5: warning: variable 'tempFactor' of type 'float' can be declared 'const' [misc-const-correctness]\n   84 |     float tempFactor = 1.0F + 0.02F * (temperature - 25.0F);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:84:31: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   84 |     float tempFactor = 1.0F + 0.02F * (temperature - 25.0F);\n      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               (                            )\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:85:5: warning: variable 'humidityFactor' of type 'float' can be declared 'const' [misc-const-correctness]\n   85 |     float humidityFactor = 1.0F + 0.01F * (humidity - params.fieldCapacity * 100.0F);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:85:35: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   85 |     float humidityFactor = 1.0F + 0.01F * (humidity - params.fieldCapacity * 100.0F);\n      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                   (                                                 )\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:88:5: warning: variable 'porosityFactor' of type 'float' can be declared 'const' [misc-const-correctness]\n   88 |     float porosityFactor = params.porosity / 0.45F; // Нормализация к стандартной пористости\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:99:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n   99 |     auto it = archieCoefficients.find(soilType);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:107:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  107 |     auto it = soilParameters.find(soilType);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:114:60: warning: 2 adjacent parameters of 'validateCompensationInputs' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  114 | bool SensorCompensationService::validateCompensationInputs(float temperature, float humidity, SoilType soilType) const {\n      |                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:114:66: note: the first parameter in the range is 'temperature'\n  114 | bool SensorCompensationService::validateCompensationInputs(float temperature, float humidity, SoilType soilType) const {\n      |                                                                  ^~~~~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:114:85: note: the last parameter in the range is 'humidity'\n  114 | bool SensorCompensationService::validateCompensationInputs(float temperature, float humidity, SoilType soilType) const {\n      |                                                                                     ^~~~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:136:43: warning: method 'getSoilParameters' can be made static [readability-convert-member-functions-to-static]\n  136 | SoilParameters SensorCompensationService::getSoilParameters(SoilType soilType) const {\n      |                                           ^                                    ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:137:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  137 |     auto it = soilParameters.find(soilType);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:141:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]\n  141 |     return SoilParameters(); // Возвращаем значения по умолчанию\n      |            ^~~~~~~~~~~~~~~~\n      |            {}\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:144:47: warning: method 'getArchieCoefficients' can be made static [readability-convert-member-functions-to-static]\n  144 | ArchieCoefficients SensorCompensationService::getArchieCoefficients(SoilType soilType) const {\n      |                                               ^                                        ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:145:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]\n  145 |     auto it = archieCoefficients.find(soilType);\n      |          ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:149:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]\n  149 |     return ArchieCoefficients(); // Возвращаем значения по умолчанию\n      |            ^~~~~~~~~~~~~~~~~~~~\n      |            {}\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:152:33: warning: method 'initializeArchieCoefficients' can be made static [readability-convert-member-functions-to-static]\n  152 | void SensorCompensationService::initializeArchieCoefficients() {\n      |                                 ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:165:33: warning: method 'initializeSoilParameters' can be made static [readability-convert-member-functions-to-static]\n  165 | void SensorCompensationService::initializeSoilParameters() {\n      |                                 ^\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:178:34: warning: method 'temperatureToKelvin' can be made static [readability-convert-member-functions-to-static]\n  178 | float SensorCompensationService::temperatureToKelvin(float celsius) const {\n      |                                  ^                                  ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:182:34: warning: method 'calculateECTemperatureFactor' can be made static [readability-convert-member-functions-to-static]\n  182 | float SensorCompensationService::calculateECTemperatureFactor(float temperature) const {\n      |                                  ^                                               ~~~~~\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:185:19: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n  185 |     return 1.0F + 0.02F * (temperature - 25.0F);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                   (                            )\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:191:5: warning: variable 'params' of type 'SoilParameters' can be declared 'const' [misc-const-correctness]\n  191 |     SoilParameters params = getSoilParameters(soilType);\n      |     ^\n      |                    const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:192:5: warning: variable 'fieldCapacityPercent' of type 'float' can be declared 'const' [misc-const-correctness]\n  192 |     float fieldCapacityPercent = params.fieldCapacity * 100.0F;\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp:194:19: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n  194 |     return 1.0F + 0.01F * (humidity - fieldCapacityPercent);\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                   (                                        )\nC:\\Git\\JXCT\\src\\business\\sensor_compensation_service.h:10:10: error: 'map' file not found [clang-diagnostic-error]\n   10 | #include <map>\n      |          ^~~~~\n",
    "stderr": "8483 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\business\\sensor_compensation_service.cpp.\n"
  },
  {
    "file": "src/web/csrf_protection.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8929 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\csrf_protection.cpp.\n"
  },
  {
    "file": "src/web/error_handlers.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8986 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\error_handlers.cpp.\n"
  },
  {
    "file": "src/web/routes_config.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\nsrc\\web\\routes_config.cpp:392:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  392 |                      config.exponentialAlpha = 0.3f;                   // по умолчанию\n      |                                                ^  ~\n      |                                                   F\nsrc\\web\\routes_config.cpp:393:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  393 |                      config.outlierThreshold = 2.0f;                   // по умолчанию\n      |                                                ^  ~\n      |                                                   F\n",
    "stderr": "9903 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_config.cpp.\n"
  },
  {
    "file": "src/web/routes_data.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "9957 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_data.cpp.\n"
  },
  {
    "file": "src/web/routes_main.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "9021 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_main.cpp.\n"
  },
  {
    "file": "src/web/routes_ota.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Esp.h:23:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n   23 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:197:10: note: 'Esp.h' included from here\n  197 | #include \"Esp.h\"\n      |          ^\nsrc\\web\\routes_ota.cpp:1:10: note: 'Arduino.h' included from here\n    1 | #include <Arduino.h>\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\io_pin_remap.h:4:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]\n    4 | #include \"Arduino.h\"\n      |          ^\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:235:10: note: 'io_pin_remap.h' included from here\n  235 | #include \"io_pin_remap.h\"\n      |          ^\nsrc\\web\\routes_ota.cpp:1:10: note: 'Arduino.h' included from here\n    1 | #include <Arduino.h>\n      |          ^\n",
    "stderr": "9925 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_ota.cpp.\n"
  },
  {
    "file": "src/web/routes_reports.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "9898 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_reports.cpp.\n"
  },
  {
    "file": "src/web/routes_service.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "10128 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_service.cpp.\n"
  },
  {
    "file": "src/web/web_templates.cpp",
    "returncode": 1,
    "stdout": "error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]\nerror: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]\nerror: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]\nwarning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]\nC:\\Users\\Robot1\\.platformio\\packages\\framework-arduinoespressif32\\cores\\esp32\\Arduino.h:27:10: error: 'stdio.h' file not found [clang-diagnostic-error]\n   27 | #include <stdio.h>\n      |          ^~~~~~~~~\n",
    "stderr": "8965 warnings and 4 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\web_templates.cpp.\n"
  }
]
