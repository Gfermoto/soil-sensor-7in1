[
  {
    "file": "src/calibration_manager.cpp",
    "returncode": 1,
    "stdout": "src/calibration_manager.cpp:7:13: warning: variable '_initialized' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n    7 | static bool _initialized = false;\n      |             ^\nsrc/calibration_manager.cpp:38:6: warning: function 'saveCsv' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   38 | bool saveCsv(SoilProfile profile, Stream& fileStream)\n      |      ^\n      | static \nsrc/calibration_manager.cpp:148:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  148 |     CalibrationEntry entries[MAX_ENTRIES];\n      |     ^\nsrc/calibration_manager.cpp:187:9: warning: variable 'ratio' of type 'float' can be declared 'const' [misc-const-correctness]\n  187 |         float ratio = (rawValue - lowerRaw) / (upperRaw - lowerRaw);\n      |         ^\n      |               const \nsrc/calibration_manager.cpp:188:9: warning: variable 'interpolatedCoeff' of type 'float' can be declared 'const' [misc-const-correctness]\n  188 |         float interpolatedCoeff = lowerCorr + ratio * (upperCorr - lowerCorr);\n      |         ^\n      |               const \nsrc/calibration_manager.cpp:188:47: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n  188 |         float interpolatedCoeff = lowerCorr + ratio * (upperCorr - lowerCorr);\n      |                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                               (                              )\nsrc/calibration_manager.cpp:191:5: warning: do not use 'else' after 'return' [readability-else-after-return]\n  191 |     else\n      |     ^~~~\n  192 |     {\n      |     ~\n  193 |         // Если нет интервала, используем ближайший коэффициент\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  194 |         return rawValue * lowerCorr;\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  195 |     }\n      |     ~\nsrc\\calibration_manager.h:4:10: error: 'FS.h' file not found [clang-diagnostic-error]\n    4 | #include <FS.h>\n      |          ^~~~~~\n",
    "stderr": "32 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\calibration_manager.cpp.\n"
  },
  {
    "file": "src/config.cpp",
    "returncode": 1,
    "stdout": "error: too many errors emitted, stopping now [clang-diagnostic-error]\nC:\\Git\\JXCT\\src\\config.cpp:16:8: warning: function 'getDeviceId' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   16 | String getDeviceId()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\config.cpp:18:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   18 |     uint8_t mac[6];\n      |     ^\nC:\\Git\\JXCT\\src\\config.cpp:20:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   20 |     char buf[32];\n      |     ^\nC:\\Git\\JXCT\\src\\config.cpp:25:8: warning: function 'getDefaultTopic' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   25 | String getDefaultTopic()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\config.cpp:27:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   27 |     uint8_t mac[6];\n      |     ^\nC:\\Git\\JXCT\\src\\config.cpp:29:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   29 |     char buf[32];\n      |     ^\nC:\\Git\\JXCT\\src\\config.cpp:102:51: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  102 |     config.latitude = preferences.getFloat(\"lat\", 0.0f);\n      |                                                   ^  ~\n      |                                                      F\nC:\\Git\\JXCT\\src\\config.cpp:103:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  103 |     config.longitude = preferences.getFloat(\"lon\", 0.0f);\n      |                                                    ^  ~\n      |                                                       F\nC:\\Git\\JXCT\\src\\config.cpp:106:71: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  106 |     config.irrigationSpikeThreshold = preferences.getFloat(\"irrigTh\", 8.0f);\n      |                                                                       ^  ~\n      |                                                                          F\ninclude\\jxct_device_info.h:11:1: error: unknown type name 'String' [clang-diagnostic-error]\n   11 | String getDeviceId();\n      | ^\ninclude\\jxct_device_info.h:12:1: error: unknown type name 'String' [clang-diagnostic-error]\n   12 | String getDefaultTopic();\n      | ^\ninclude\\logger.h:12:17: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   12 | enum LogLevel : std::uint8_t\n      |                 ^\ninclude\\logger.h:21:23: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   21 | enum class LogColor : std::uint8_t\n      |                       ^\ninclude\\logger.h:58:1: error: unknown type name 'String' [clang-diagnostic-error]\n   58 | String formatLogMessage(const char* format, ...);\n      | ^\ninclude\\logger.h:59:1: error: unknown type name 'String' [clang-diagnostic-error]\n   59 | String formatLogMessage(const String& message);\n      | ^\ninclude\\logger.h:59:31: error: unknown type name 'String' [clang-diagnostic-error]\n   59 | String formatLogMessage(const String& message);\n      |                               ^\ninclude\\logger.h:62:21: error: unknown type name 'String' [clang-diagnostic-error]\n   62 | void logError(const String& message);\n      |                     ^\ninclude\\logger.h:63:20: error: unknown type name 'String' [clang-diagnostic-error]\n   63 | void logWarn(const String& message);\n      |                    ^\ninclude\\logger.h:64:20: error: unknown type name 'String' [clang-diagnostic-error]\n   64 | void logInfo(const String& message);\n      |                    ^\ninclude\\logger.h:65:21: error: unknown type name 'String' [clang-diagnostic-error]\n   65 | void logDebug(const String& message);\n      |                     ^\ninclude\\logger.h:66:23: error: unknown type name 'String' [clang-diagnostic-error]\n   66 | void logSuccess(const String& message);\n      |                       ^\ninclude\\logger.h:67:22: error: unknown type name 'String' [clang-diagnostic-error]\n   67 | void logSensor(const String& message);\n      |                      ^\ninclude\\logger.h:68:20: error: unknown type name 'String' [clang-diagnostic-error]\n   68 | void logWiFi(const String& message);\n      |                    ^\ninclude\\logger.h:69:20: error: unknown type name 'String' [clang-diagnostic-error]\n   69 | void logMQTT(const String& message);\n      |                    ^\ninclude\\logger.h:70:20: error: unknown type name 'String' [clang-diagnostic-error]\n   70 | void logHTTP(const String& message);\n      |                    ^\ninclude\\logger.h:71:22: error: unknown type name 'String' [clang-diagnostic-error]\n   71 | void logSystem(const String& message);\n      |                      ^\ntest/stubs\\WiFi.h:7:5: error: unknown type name 'String' [clang-diagnostic-error]\n    7 |     String macAddress()\n      |     ^\ntest/stubs\\WiFi.h:9:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n    9 |         return String(\"AA:BB:CC:DD:EE:FF\");\n      |                ^\n",
    "stderr": "76 warnings and 20 errors generated.\nError while processing C:\\Git\\JXCT\\src\\config.cpp.\n"
  },
  {
    "file": "src/fake_sensor.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\fake_sensor.cpp:14:6: warning: function 'fakeSensorTask' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   14 | void fakeSensorTask(void* pvParameters)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\fake_sensor.cpp:14:27: warning: parameter 'pvParameters' is unused [misc-unused-parameters]\n   14 | void fakeSensorTask(void* pvParameters)\n      |                           ^~~~~~~~~~~~\n      |                            /*pvParameters*/\nC:\\Git\\JXCT\\src\\fake_sensor.cpp:36:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   36 |             constexpr float NPK_FACTOR = 6.5f;  // пересчёт мг/дм³ → мг/кг (ρ=1.3 г/см³, влажность ≈30%)\n      |                                          ^  ~\n      |                                             F\nC:\\Git\\JXCT\\src\\fake_sensor.cpp:81:17: warning: variable 'ec25' of type 'float' can be declared 'const' [misc-const-correctness]\n   81 |                 float ec25 = sensorData.ec / (1.0f + 0.021f * (sensorData.temperature - 25.0f));\n      |                 ^\n      |                       const \nC:\\Git\\JXCT\\src\\fake_sensor.cpp:81:47: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   81 |                 float ec25 = sensorData.ec / (1.0f + 0.021f * (sensorData.temperature - 25.0f));\n      |                                               ^  ~\n      |                                                  F\nC:\\Git\\JXCT\\src\\fake_sensor.cpp:81:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   81 |                 float ec25 = sensorData.ec / (1.0f + 0.021f * (sensorData.temperature - 25.0f));\n      |                                                      ^    ~\n      |                                                           F\nC:\\Git\\JXCT\\src\\fake_sensor.cpp:81:89: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   81 |                 float ec25 = sensorData.ec / (1.0f + 0.021f * (sensorData.temperature - 25.0f));\n      |                                                                                         ^   ~\n      |                                                                                             F\nC:\\Git\\JXCT\\src\\modbus_sensor.h:5:10: error: 'ModbusMaster.h' file not found [clang-diagnostic-error]\n    5 | #include <ModbusMaster.h>\n      |          ^~~~~~~~~~~~~~~~\n",
    "stderr": "90 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\fake_sensor.cpp.\n"
  },
  {
    "file": "src/jxct_format_utils.cpp",
    "returncode": 1,
    "stdout": "include\\jxct_format_utils.h:3:10: error: 'string' file not found [clang-diagnostic-error]\n    3 | #include <string>\n      |          ^~~~~~~~\nsrc/jxct_format_utils.cpp:6:13: warning: function 'formatFloat' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n    6 | std::string formatFloat(float value, int precision, bool asInt)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:8:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n    8 |     char buf[8];\n      |     ^\nsrc/jxct_format_utils.cpp:20:13: warning: function 'format_moisture' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   20 | std::string format_moisture(float value)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:25:13: warning: function 'format_temperature' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   25 | std::string format_temperature(float value)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:30:13: warning: function 'format_ec' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   30 | std::string format_ec(float value)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:35:13: warning: function 'format_ph' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   35 | std::string format_ph(float value)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:40:13: warning: function 'format_npk' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   40 | std::string format_npk(float value)\n      |             ^\n      | static \nsrc/jxct_format_utils.cpp:46:8: warning: function 'formatValue' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   46 | String formatValue(float value, const char* unit, int precision)\n      |        ^\n      | static \nsrc/jxct_format_utils.cpp:48:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   48 |     char buf[32];\n      |     ^\n",
    "stderr": "25 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\jxct_format_utils.cpp.\n"
  },
  {
    "file": "src/jxct_ui_system.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\jxct_ui_system.cpp:6:18: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n    6 |     static const char css[] = R\"(\n      |                  ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:286:1: error: unknown type name 'String' [clang-diagnostic-error]\n  286 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action)\n      | ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:286:8: warning: function 'generateButton' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  286 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:286:58: warning: 2 adjacent parameters of 'generateButton' of similar type ('const char *') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  286 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action)\n      |                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:286:70: note: the first parameter in the range is 'text'\n  286 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action)\n      |                                                                      ^~~~\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:286:88: note: the last parameter in the range is 'action'\n  286 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action)\n      |                                                                                        ^~~~~~\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:288:5: error: unknown type name 'String' [clang-diagnostic-error]\n  288 |     String cssClass = \"btn \";\n      |     ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:309:5: error: unknown type name 'String' [clang-diagnostic-error]\n  309 |     String html = \"<button type='submit' class='\" + cssClass + \"'\";\n      |     ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:310:9: error: use of undeclared identifier 'strlen' [clang-diagnostic-error]\n  310 |     if (strlen(action) > 0)\n      |         ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:312:78: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n  312 |         html = \"<button type='button' class='\" + cssClass + \"' onclick=\\\"\" + String(action) + \"\\\"\";\n      |                                                                              ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:314:19: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n  314 |     html += \">\" + String(icon) + \" \" + String(text) + \"</button>\";\n      |                   ^\nC:\\Git\\JXCT\\src\\jxct_ui_system.cpp:314:40: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n  314 |     html += \">\" + String(icon) + \" \" + String(text) + \"</button>\";\n      |                                        ^\ninclude\\jxct_ui_system.h:63:25: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   63 | enum class ButtonType : std::uint8_t\n      |                         ^\ninclude\\jxct_ui_system.h:73:26: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   73 | enum class MessageType : std::uint8_t\n      |                          ^\ninclude\\jxct_ui_system.h:85:1: error: unknown type name 'String' [clang-diagnostic-error]\n   85 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action = \"\");\n      | ^\n",
    "stderr": "21 warnings and 10 errors generated.\nError while processing C:\\Git\\JXCT\\src\\jxct_ui_system.cpp.\n"
  },
  {
    "file": "src/logger.cpp",
    "returncode": 1,
    "stdout": "src/logger.cpp:7:10: error: 'cstdarg' file not found [clang-diagnostic-error]\n    7 | #include <cstdarg>\n      |          ^~~~~~~~~\nsrc/logger.cpp:15:8: warning: function 'getUptimeString' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   15 | String getUptimeString()\n      |        ^\n      | static \nsrc/logger.cpp:17:5: warning: variable 'milliseconds' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n   17 |     unsigned long milliseconds = millis();\n      |     ^\n      |                   const \nsrc/logger.cpp:21:5: warning: variable 'days' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n   21 |     unsigned long days = hours / 24;\n      |     ^\n      |                   const \nsrc/logger.cpp:31:8: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n   31 | String formatLogMessage(const char* format, ...)\n      |        ^\nsrc/logger.cpp:31:8: warning: function 'formatLogMessage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   31 | String formatLogMessage(const char* format, ...)\n      |        ^\n      | static \nsrc/logger.cpp:37:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   37 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:54:8: warning: function 'formatLogMessage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   54 | String formatLogMessage(const String& message)\n      |        ^\n      | static \nsrc/logger.cpp:60:6: warning: function 'logError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   60 | void logError(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:73:6: warning: function 'logWarn' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   73 | void logWarn(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:86:6: warning: function 'logInfo' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   86 | void logInfo(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:99:6: warning: function 'logDebug' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   99 | void logDebug(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:112:6: warning: function 'logSuccess' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  112 | void logSuccess(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:125:6: warning: function 'logSensor' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  125 | void logSensor(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:138:6: warning: function 'logWiFi' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  138 | void logWiFi(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:151:6: warning: function 'logMQTT' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  151 | void logMQTT(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:164:6: warning: function 'logHTTP' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  164 | void logHTTP(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:177:6: warning: function 'logSystem' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  177 | void logSystem(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:190:6: warning: function 'logData' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  190 | void logData(const String& message)\n      |      ^\n      | static \nsrc/logger.cpp:204:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  204 | void logError(const char* format, ...)\n      |      ^\nsrc/logger.cpp:209:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  209 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:220:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  220 | void logWarn(const char* format, ...)\n      |      ^\nsrc/logger.cpp:225:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  225 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:236:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  236 | void logInfo(const char* format, ...)\n      |      ^\nsrc/logger.cpp:241:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  241 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:252:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  252 | void logDebug(const char* format, ...)\n      |      ^\nsrc/logger.cpp:257:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  257 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:268:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  268 | void logSuccess(const char* format, ...)\n      |      ^\nsrc/logger.cpp:273:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  273 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:284:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  284 | void logSensor(const char* format, ...)\n      |      ^\nsrc/logger.cpp:289:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  289 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:300:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  300 | void logWiFi(const char* format, ...)\n      |      ^\nsrc/logger.cpp:305:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  305 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:316:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  316 | void logMQTT(const char* format, ...)\n      |      ^\nsrc/logger.cpp:321:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  321 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:332:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  332 | void logHTTP(const char* format, ...)\n      |      ^\nsrc/logger.cpp:337:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  337 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:348:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  348 | void logSystem(const char* format, ...)\n      |      ^\nsrc/logger.cpp:353:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  353 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:364:6: warning: do not define a C-style variadic function; consider using a function parameter pack or currying instead [cert-dcl50-cpp]\n  364 | void logData(const char* format, ...)\n      |      ^\nsrc/logger.cpp:369:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  369 |     char buffer[512];\n      |     ^\nsrc/logger.cpp:464:6: warning: function 'printHeader' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  464 | void printHeader(const String& title, LogColor color)\n      |      ^\n      | static \nsrc/logger.cpp:473:6: warning: function 'printSubHeader' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  473 | void printSubHeader(const String& title, LogColor color)\n      |      ^\n      | static \nsrc\\../include/logger.h:12:17: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   12 | enum LogLevel : std::uint8_t\n      |                 ^\nsrc\\../include/logger.h:21:23: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   21 | enum class LogColor : std::uint8_t\n      |                       ^\nsrc\\../include/logger.h:58:1: error: unknown type name 'String' [clang-diagnostic-error]\n   58 | String formatLogMessage(const char* format, ...);\n      | ^\nsrc\\../include/logger.h:59:1: error: unknown type name 'String' [clang-diagnostic-error]\n   59 | String formatLogMessage(const String& message);\n      | ^\nsrc\\../include/logger.h:59:31: error: unknown type name 'String' [clang-diagnostic-error]\n   59 | String formatLogMessage(const String& message);\n      |                               ^\nsrc\\../include/logger.h:62:21: error: unknown type name 'String' [clang-diagnostic-error]\n   62 | void logError(const String& message);\n      |                     ^\nsrc\\../include/logger.h:63:20: error: unknown type name 'String' [clang-diagnostic-error]\n   63 | void logWarn(const String& message);\n      |                    ^\nsrc\\../include/logger.h:64:20: error: unknown type name 'String' [clang-diagnostic-error]\n   64 | void logInfo(const String& message);\n      |                    ^\nsrc\\../include/logger.h:65:21: error: unknown type name 'String' [clang-diagnostic-error]\n   65 | void logDebug(const String& message);\n      |                     ^\nsrc\\../include/logger.h:66:23: error: unknown type name 'String' [clang-diagnostic-error]\n   66 | void logSuccess(const String& message);\n      |                       ^\nsrc\\../include/logger.h:67:22: error: unknown type name 'String' [clang-diagnostic-error]\n   67 | void logSensor(const String& message);\n      |                      ^\nsrc\\../include/logger.h:68:20: error: unknown type name 'String' [clang-diagnostic-error]\n   68 | void logWiFi(const String& message);\n      |                    ^\nsrc\\../include/logger.h:69:20: error: unknown type name 'String' [clang-diagnostic-error]\n   69 | void logMQTT(const String& message);\n      |                    ^\nsrc\\../include/logger.h:70:20: error: unknown type name 'String' [clang-diagnostic-error]\n   70 | void logHTTP(const String& message);\n      |                    ^\nsrc\\../include/logger.h:71:22: error: unknown type name 'String' [clang-diagnostic-error]\n   71 | void logSystem(const String& message);\n      |                      ^\nsrc\\../include/logger.h:72:20: error: unknown type name 'String' [clang-diagnostic-error]\n   72 | void logData(const String& message);\n      |                    ^\nsrc\\../include/logger.h:101:24: error: unknown type name 'String' [clang-diagnostic-error]\n  101 | void printHeader(const String& title, LogColor color = LogColor::CYAN_DEFAULT);\n      |                        ^\nsrc\\../include/logger.h:102:27: error: unknown type name 'String' [clang-diagnostic-error]\n  102 | void printSubHeader(const String& title, LogColor color = LogColor::BLUE);\n      |                           ^\n",
    "stderr": "61 warnings and 19 errors generated.\nError while processing C:\\Git\\JXCT\\src\\logger.cpp.\n"
  },
  {
    "file": "src/main.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\main.cpp:10:10: error: 'NTPClient.h' file not found [clang-diagnostic-error]\n   10 | #include <NTPClient.h>\n      |          ^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\main.cpp:30:15: warning: variable 'lastDataPublish' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   30 | unsigned long lastDataPublish = 0;\n      |               ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:31:15: warning: variable 'lastNtpUpdate' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   31 | unsigned long lastNtpUpdate = 0;\n      |               ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:34:6: warning: function 'initPreferences' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   34 | bool initPreferences();\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:35:6: warning: redundant 'setupWiFi' declaration [readability-redundant-declaration]\n   35 | void setupWiFi();\n      | ~~~~~^~~~~~~~~~~~\ninclude\\../src/wifi_manager.h:35:6: note: previously declared here\n   35 | void setupWiFi();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:36:6: warning: redundant 'setupModbus' declaration [readability-redundant-declaration]\n   36 | void setupModbus();\n      | ~~~~~^~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\modbus_sensor.h:101:6: note: previously declared here\n  101 | void setupModbus();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:37:6: warning: redundant 'loadConfig' declaration [readability-redundant-declaration]\n   37 | void loadConfig();\n      | ~~~~~^~~~~~~~~~~~~\ninclude\\jxct_config_vars.h:133:6: note: previously declared here\n  133 | void loadConfig();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:38:6: warning: redundant 'startRealSensorTask' declaration [readability-redundant-declaration]\n   38 | void startRealSensorTask();\n      | ~~~~~^~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\modbus_sensor.h:133:6: note: previously declared here\n  133 | void startRealSensorTask();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:39:6: warning: redundant 'startFakeSensorTask' declaration [readability-redundant-declaration]\n   39 | void startFakeSensorTask();\n      | ~~~~~^~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\fake_sensor.h:4:6: note: previously declared here\n    4 | void startFakeSensorTask();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:40:6: warning: redundant 'handleWiFi' declaration [readability-redundant-declaration]\n   40 | void handleWiFi();\n      | ~~~~~^~~~~~~~~~~~~\ninclude\\../src/wifi_manager.h:38:6: note: previously declared here\n   38 | void handleWiFi();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:41:6: warning: redundant 'handleMQTT' declaration [readability-redundant-declaration]\n   41 | void handleMQTT();\n      | ~~~~~^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\mqtt_client.h:22:6: note: previously declared here\n   22 | void handleMQTT();\n      |      ^\nC:\\Git\\JXCT\\src\\main.cpp:43:9: warning: variable 'ntpUDP' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   43 | WiFiUDP ntpUDP;\n      |         ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:44:12: warning: variable 'timeClient' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   44 | NTPClient* timeClient = nullptr;\n      |            ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:51:15: warning: variable 'lastStatusPrint' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   51 | unsigned long lastStatusPrint = 0;\n      |               ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:54:22: warning: variable 'mqttBatchTimer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   54 | static unsigned long mqttBatchTimer = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\main.cpp:55:22: warning: variable 'thingspeakBatchTimer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   55 | static unsigned long thingspeakBatchTimer = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\main.cpp:56:13: warning: variable 'pendingMqttPublish' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   56 | static bool pendingMqttPublish = false;\n      |             ^\nC:\\Git\\JXCT\\src\\main.cpp:57:13: warning: variable 'pendingThingspeakPublish' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   57 | static bool pendingThingspeakPublish = false;\n      |             ^\nC:\\Git\\JXCT\\src\\main.cpp:60:6: warning: function 'resetButtonTask' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   60 | void resetButtonTask(void* parameter)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:60:28: warning: parameter 'parameter' is unused [misc-unused-parameters]\n   60 | void resetButtonTask(void* parameter)\n      |                            ^~~~~~~~~\n      |                             /*parameter*/\nC:\\Git\\JXCT\\src\\main.cpp:68:9: warning: variable 'currentState' of type 'bool' can be declared 'const' [misc-const-correctness]\n   68 |         bool currentState = (digitalRead(RESET_BUTTON_PIN) == LOW);\n      |         ^\n      |              const \nC:\\Git\\JXCT\\src\\main.cpp:98:6: warning: function 'setup' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   98 | void setup()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:224:6: warning: function 'loop' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  224 | void loop()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\main.cpp:226:5: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  226 |     unsigned long currentTime = millis();\n      |     ^\n      |                   const \nC:\\Git\\JXCT\\src\\main.cpp:282:9: warning: variable 'tsOk' of type 'bool' can be declared 'const' [misc-const-correctness]\n  282 |         bool tsOk = sendDataToThingSpeak();\n      |         ^\n      |              const \n",
    "stderr": "140 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\main.cpp.\n"
  },
  {
    "file": "src/modbus_sensor.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\modbus_sensor.cpp:17:14: warning: variable 'modbus' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   17 | ModbusMaster modbus;\n      |              ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:20:8: warning: variable 'sensorLastError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   20 | String sensorLastError = \"\";\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:22:22: warning: variable 'lastIrrigationTs' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   22 | static unsigned long lastIrrigationTs = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:24:6: warning: function 'debugPrintBuffer' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   24 | void debugPrintBuffer(const char* prefix, uint8_t* buffer, size_t length)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:24:52: warning: pointer parameter 'buffer' can be pointer to const [readability-non-const-parameter]\n   24 | void debugPrintBuffer(const char* prefix, uint8_t* buffer, size_t length)\n      |                                                    ^\n      |                                           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:115:10: warning: function 'calculateCRC16' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  115 | uint16_t calculateCRC16(uint8_t* data, size_t length)\n      |          ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:115:34: warning: pointer parameter 'data' can be pointer to const [readability-non-const-parameter]\n  115 | uint16_t calculateCRC16(uint8_t* data, size_t length)\n      |                                  ^\n      |                         const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:124:17: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]\n  124 |             if (crc & 0x0001)\n      |                 ^           \n      |                 (           ) != 0\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:140:82: warning: statement should be inside braces [readability-braces-around-statements]\n  140 |     if (data.temperature < MIN_TEMPERATURE || data.temperature > MAX_TEMPERATURE) return false;\n      |                                                                                  ^             \n      |                                                                                   {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:141:70: warning: statement should be inside braces [readability-braces-around-statements]\n  141 |     if (data.humidity < MIN_HUMIDITY || data.humidity > MAX_HUMIDITY) return false;\n      |                                                                      ^             \n      |                                                                       {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:142:46: warning: statement should be inside braces [readability-braces-around-statements]\n  142 |     if (data.ec < MIN_EC || data.ec > MAX_EC) return false;\n      |                                              ^             \n      |                                               {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:143:46: warning: statement should be inside braces [readability-braces-around-statements]\n  143 |     if (data.ph < MIN_PH || data.ph > MAX_PH) return false;\n      |                                              ^             \n      |                                               {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:144:60: warning: statement should be inside braces [readability-braces-around-statements]\n  144 |     if (data.nitrogen < MIN_NPK || data.nitrogen > MAX_NPK) return false;\n      |                                                            ^             \n      |                                                             {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:145:64: warning: statement should be inside braces [readability-braces-around-statements]\n  145 |     if (data.phosphorus < MIN_NPK || data.phosphorus > MAX_NPK) return false;\n      |                                                                ^             \n      |                                                                 {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:146:62: warning: statement should be inside braces [readability-braces-around-statements]\n  146 |     if (data.potassium < MIN_NPK || data.potassium > MAX_NPK) return false;\n      |                                                              ^             \n      |                                                               {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:152:31: warning: statement should be inside braces [readability-braces-around-statements]\n  152 |     if (!sensorCache.is_valid) return false;\n      |                               ^             \n      |                                {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:153:65: warning: statement should be inside braces [readability-braces-around-statements]\n  153 |     if (millis() - sensorCache.timestamp > MODBUS_CACHE_TIMEOUT) return false;\n      |                                                                 ^             \n      |                                                                  {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:170:5: warning: do not use 'else' after 'return' [readability-else-after-return]\n  170 |     else\n      |     ^~~~\n  171 |     {\n      |     ~\n  172 |         logError(\"Ошибка чтения версии прошивки: %d\", result);\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  173 |         printModbusError(result);\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~\n  174 |         return false;\n      |         ~~~~~~~~~~~~~\n  175 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:191:46: warning: statement should be inside braces [readability-braces-around-statements]\n  191 |     if (new_address < 1 || new_address > 247) return false;\n      |                                              ^             \n      |                                               {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:290:6: warning: function 'readSingleRegister' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  290 | bool readSingleRegister(uint16_t reg_addr, const char* reg_name, float multiplier, void* target, bool is_float)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:301:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]\n  301 |             float* float_target = static_cast<float*>(target);\n      |             ^~~~~\n      |             auto\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:307:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]\n  307 |             uint16_t* int_target = static_cast<uint16_t*>(target);\n      |             ^~~~~~~~\n      |             auto\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:313:5: warning: do not use 'else' after 'return' [readability-else-after-return]\n  313 |     else\n      |     ^~~~\n  314 |     {\n      |     ~\n  315 |         logError(\"Ошибка чтения %s: %d\", reg_name, result);\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  316 |         printModbusError(result);\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~\n  317 |         return false;\n      |         ~~~~~~~~~~~~~\n  318 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:325:5: warning: function 'readBasicParameters' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  325 | int readBasicParameters()\n      |     ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:330:42: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  330 |     if (readSingleRegister(REG_PH, \"pH\", 0.01f, &sensorData.ph, true)) success_count++;\n      |                                          ^   ~\n      |                                              F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:330:71: warning: statement should be inside braces [readability-braces-around-statements]\n  330 |     if (readSingleRegister(REG_PH, \"pH\", 0.01f, &sensorData.ph, true)) success_count++;\n      |                                                                       ^                \n      |                                                                        {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:333:69: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  333 |     if (readSingleRegister(REG_SOIL_MOISTURE, \"Влажность\", 0.1f, &sensorData.humidity, true)) success_count++;\n      |                                                            ^  ~\n      |                                                               F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:333:103: warning: statement should be inside braces [readability-braces-around-statements]\n  333 |     if (readSingleRegister(REG_SOIL_MOISTURE, \"Влажность\", 0.1f, &sensorData.humidity, true)) success_count++;\n      |                                                                                              ^                \n      |                                                                                               {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:336:69: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  336 |     if (readSingleRegister(REG_SOIL_TEMP, \"Температура\", 0.1f, &sensorData.temperature, true)) success_count++;\n      |                                                          ^  ~\n      |                                                             F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:336:106: warning: statement should be inside braces [readability-braces-around-statements]\n  336 |     if (readSingleRegister(REG_SOIL_TEMP, \"Температура\", 0.1f, &sensorData.temperature, true)) success_count++;\n      |                                                                                               ^                \n      |                                                                                                {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:339:52: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  339 |     if (readSingleRegister(REG_CONDUCTIVITY, \"EC\", 1.0f, &sensorData.ec, true)) success_count++;\n      |                                                    ^  ~\n      |                                                       F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:339:80: warning: statement should be inside braces [readability-braces-around-statements]\n  339 |     if (readSingleRegister(REG_CONDUCTIVITY, \"EC\", 1.0f, &sensorData.ec, true)) success_count++;\n      |                                                                                ^                \n      |                                                                                 {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:348:5: warning: function 'readNPKParameters' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  348 | int readNPKParameters()\n      |     ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:353:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  353 |     if (readSingleRegister(REG_NITROGEN, \"Азот\", 1.0f, &sensorData.nitrogen, true)) success_count++;\n      |                                                  ^  ~\n      |                                                     F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:353:88: warning: statement should be inside braces [readability-braces-around-statements]\n  353 |     if (readSingleRegister(REG_NITROGEN, \"Азот\", 1.0f, &sensorData.nitrogen, true)) success_count++;\n      |                                                                                    ^                \n      |                                                                                     {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:356:60: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  356 |     if (readSingleRegister(REG_PHOSPHORUS, \"Фосфор\", 1.0f, &sensorData.phosphorus, true)) success_count++;\n      |                                                      ^  ~\n      |                                                         F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:356:96: warning: statement should be inside braces [readability-braces-around-statements]\n  356 |     if (readSingleRegister(REG_PHOSPHORUS, \"Фосфор\", 1.0f, &sensorData.phosphorus, true)) success_count++;\n      |                                                                                          ^                \n      |                                                                                           {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:359:57: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  359 |     if (readSingleRegister(REG_POTASSIUM, \"Калий\", 1.0f, &sensorData.potassium, true)) success_count++;\n      |                                                    ^  ~\n      |                                                       F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:359:92: warning: statement should be inside braces [readability-braces-around-statements]\n  359 |     if (readSingleRegister(REG_POTASSIUM, \"Калий\", 1.0f, &sensorData.potassium, true)) success_count++;\n      |                                                                                       ^                \n      |                                                                                        {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:368:13: warning: function 'saveRawSnapshot' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  368 | static void saveRawSnapshot(SensorData& d)\n      |             ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:368:41: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]\n  368 | static void saveRawSnapshot(SensorData& d)\n      |                                         ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:379:13: warning: function 'updateIrrigationFlag' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  379 | static void updateIrrigationFlag(SensorData& d)\n      |             ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:379:46: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]\n  379 | static void updateIrrigationFlag(SensorData& d)\n      |                                              ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:382:12: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  382 |     static float buf[WIN] = {NAN};\n      |            ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:383:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]\n  383 |     static uint8_t idx = 0, filled = 0, persist = 0;\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:386:41: warning: statement should be inside braces [readability-braces-around-statements]\n  386 |     for (uint8_t i = 0; i < filled; ++i) baseline = (buf[i] < baseline) ? buf[i] : baseline;\n      |                                         ^                                                   \n      |                                          {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:388:5: warning: variable 'spike' of type 'bool' can be declared 'const' [misc-const-correctness]\n  388 |     bool spike = (filled == WIN) && (d.humidity - baseline >= config.irrigationSpikeThreshold) && (d.humidity > 25.0f);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:388:113: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  388 |     bool spike = (filled == WIN) && (d.humidity - baseline >= config.irrigationSpikeThreshold) && (d.humidity > 25.0f);\n      |                                                                                                                 ^   ~\n      |                                                                                                                     F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:398:22: warning: statement should be inside braces [readability-braces-around-statements]\n  398 |     if (filled < WIN) ++filled;\n      |                      ^         \n      |                       {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:403:13: warning: function 'applyCompensationIfEnabled' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  403 | static void applyCompensationIfEnabled(SensorData& d)\n      |             ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:403:52: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]\n  403 | static void applyCompensationIfEnabled(SensorData& d)\n      |                                                    ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:405:42: warning: statement should be inside braces [readability-braces-around-statements]\n  405 |     if (!config.flags.calibrationEnabled) return;\n      |                                          ^       \n      |                                           {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:409:5: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]\n  409 |     switch (config.soilProfile)\n      |     ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:434:5: warning: variable 'tempCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  434 |     float tempCalibrated = CalibrationManager::applyCalibration(d.temperature, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:435:5: warning: variable 'humCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  435 |     float humCalibrated = CalibrationManager::applyCalibration(d.humidity, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:436:5: warning: variable 'ecCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  436 |     float ecCalibrated = CalibrationManager::applyCalibration(d.ec, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:437:5: warning: variable 'phCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  437 |     float phCalibrated = CalibrationManager::applyCalibration(d.ph, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:438:5: warning: variable 'nCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  438 |     float nCalibrated = CalibrationManager::applyCalibration(d.nitrogen, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:439:5: warning: variable 'pCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  439 |     float pCalibrated = CalibrationManager::applyCalibration(d.phosphorus, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:440:5: warning: variable 'kCalibrated' of type 'float' can be declared 'const' [misc-const-correctness]\n  440 |     float kCalibrated = CalibrationManager::applyCalibration(d.potassium, profile);\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:443:5: warning: variable 'ec25' of type 'float' can be declared 'const' [misc-const-correctness]\n  443 |     float ec25 = ecCalibrated / (1.0f + 0.021f * (tempCalibrated - 25.0f));\n      |     ^\n      |           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:443:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  443 |     float ec25 = ecCalibrated / (1.0f + 0.021f * (tempCalibrated - 25.0f));\n      |                                  ^  ~\n      |                                     F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:443:41: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  443 |     float ec25 = ecCalibrated / (1.0f + 0.021f * (tempCalibrated - 25.0f));\n      |                                         ^    ~\n      |                                              F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:443:68: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  443 |     float ec25 = ecCalibrated / (1.0f + 0.021f * (tempCalibrated - 25.0f));\n      |                                                                    ^   ~\n      |                                                                        F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:462:6: warning: function 'finalizeSensorData' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  462 | void finalizeSensorData(bool success)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:500:5: warning: variable 'basic_success' of type 'int' can be declared 'const' [misc-const-correctness]\n  500 |     int basic_success = readBasicParameters();\n      |     ^\n      |         const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:503:5: warning: variable 'npk_success' of type 'int' can be declared 'const' [misc-const-correctness]\n  503 |     int npk_success = readNPKParameters();\n      |     ^\n      |         const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:506:5: warning: variable 'total_success' of type 'bool' can be declared 'const' [misc-const-correctness]\n  506 |     bool total_success = (basic_success == 4) && (npk_success == 3);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:514:12: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  514 |     return value * multiplier;\n      |            ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:542:6: warning: function 'realSensorTask' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  542 | void realSensorTask(void* pvParameters)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:542:27: warning: parameter 'pvParameters' is unused [misc-unused-parameters]\n  542 | void realSensorTask(void* pvParameters)\n      |                           ^~~~~~~~~~~~\n      |                            /*pvParameters*/\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:626:5: warning: use `std::max` instead of `<` [readability-use-std-min-max]\n    9 |     if (window_size < 5) window_size = 5;\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |     window_size = std::max<uint8_t>(window_size, 5);\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:626:25: warning: statement should be inside braces [readability-braces-around-statements]\n  626 |     if (window_size < 5) window_size = 5;\n      |                         ^\nnote: this fix will not be applied because it overlaps with another fix\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:627:5: warning: use `std::min` instead of `>` [readability-use-std-min-max]\n  627 |     if (window_size > 15) window_size = 15;\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |     window_size = std::min<uint8_t>(window_size, 15);\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:627:26: warning: statement should be inside braces [readability-braces-around-statements]\n  627 |     if (window_size > 15) window_size = 15;\n      |                          ^\nnote: this fix will not be applied because it overlaps with another fix\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:630:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]\n  630 |     static float sum_temp = 0, sum_hum = 0, sum_ec = 0, sum_ph = 0, sum_n = 0, sum_p = 0, sum_k = 0;\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:662:42: warning: statement should be inside braces [readability-braces-around-statements]\n  662 |     if (data.buffer_filled < window_size) data.buffer_filled++;\n      |                                          ^                     \n      |                                           {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:664:5: warning: variable 'effective_window' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]\n  664 |     uint8_t effective_window = (data.buffer_filled < window_size) ? data.buffer_filled : window_size;\n      |     ^\n      |             const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:669:39: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  669 |         data.temperature = sum_temp / effective_window;\n      |                                       ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:670:35: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  670 |         data.humidity = sum_hum / effective_window;\n      |                                   ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:671:28: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  671 |         data.ec = sum_ec / effective_window;\n      |                            ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:672:28: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  672 |         data.ph = sum_ph / effective_window;\n      |                            ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:673:33: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  673 |         data.nitrogen = sum_n / effective_window;\n      |                                 ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:674:35: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  674 |         data.phosphorus = sum_p / effective_window;\n      |                                   ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:675:34: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  675 |         data.potassium = sum_k / effective_window;\n      |                                  ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:703:37: warning: pointer parameter 'buffer' can be pointer to const [readability-non-const-parameter]\n  703 | float calculateMovingAverage(float* buffer, uint8_t window_size, uint8_t filled)\n      |                                     ^\n      |                              const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:705:21: warning: statement should be inside braces [readability-braces-around-statements]\n  705 |     if (filled == 0) return 0.0;\n      |                     ^           \n      |                      {\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:708:5: warning: variable 'elements_to_use' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]\n  708 |     uint8_t elements_to_use = (filled < window_size) ? filled : window_size;\n      |     ^\n      |             const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:711:19: warning: redundant 'config' declaration [readability-redundant-declaration]\n  711 |     extern Config config;\n      |     ~~~~~~~~~~~~~~^~~~~~~\ninclude\\jxct_config_vars.h:129:15: note: previously declared here\n  129 | extern Config config;\n      |               ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:716:9: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  716 |         float temp_values[15];  // Максимальный размер окна\n      |         ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:725:33: warning: loop variable has narrower type 'uint8_t' than iteration's upper bound 'int' [bugprone-too-small-loop-variable]\n  725 |             for (uint8_t j = 0; j < elements_to_use - i - 1; j++)\n      |                                 ^\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:729:21: warning: variable 'temp' of type 'float' can be declared 'const' [misc-const-correctness]\n  729 |                     float temp = temp_values[j];\n      |                     ^\n      |                           const \nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:739:33: warning: '/' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n  739 |             return (temp_values[elements_to_use / 2 - 1] + temp_values[elements_to_use / 2]) / 2.0f;\n      |                                 ^~~~~~~~~~~~~~~~~~~\n      |                                 (                  )\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:739:96: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n  739 |             return (temp_values[elements_to_use / 2 - 1] + temp_values[elements_to_use / 2]) / 2.0f;\n      |                                                                                                ^  ~\n      |                                                                                                   F\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:741:9: warning: do not use 'else' after 'return' [readability-else-after-return]\n  741 |         else\n      |         ^~~~\n  742 |         {\n      |         ~\n  743 |             return temp_values[elements_to_use / 2];\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  744 |         }\n      |         ~\nC:\\Git\\JXCT\\src\\modbus_sensor.cpp:754:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions]\n  754 |         return sum / elements_to_use;\n      |                      ^\nC:\\Git\\JXCT\\src\\modbus_sensor.h:5:10: error: 'ModbusMaster.h' file not found [clang-diagnostic-error]\n    5 | #include <ModbusMaster.h>\n      |          ^~~~~~~~~~~~~~~~\n",
    "stderr": "470 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\modbus_sensor.cpp.\n"
  },
  {
    "file": "src/mqtt_client.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\mqtt_client.cpp:7:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    7 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:22:12: warning: variable 'espClient' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   22 | WiFiClient espClient;\n      |            ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:23:14: warning: variable 'mqttClient' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   23 | PubSubClient mqttClient(espClient);\n      |              ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:24:6: warning: variable 'mqttConnected' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   24 | bool mqttConnected = false;\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:27:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   27 | static char mqttLastErrorBuffer[128] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:27:13: warning: variable 'mqttLastErrorBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   27 | static char mqttLastErrorBuffer[128] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:28:13: warning: function 'getMqttLastError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   28 | const char* getMqttLastError()\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:34:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   34 | static char clientIdBuffer[32] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:34:13: warning: variable 'clientIdBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   34 | static char clientIdBuffer[32] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:35:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   35 | static char statusTopicBuffer[128] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:35:13: warning: variable 'statusTopicBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   35 | static char statusTopicBuffer[128] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:36:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   36 | static char commandTopicBuffer[128] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:36:13: warning: variable 'commandTopicBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   36 | static char commandTopicBuffer[128] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:37:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   37 | static char otaStatusTopicBuffer[128] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:37:13: warning: variable 'otaStatusTopicBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   37 | static char otaStatusTopicBuffer[128] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:38:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   38 | static char otaCommandTopicBuffer[128] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:38:13: warning: variable 'otaCommandTopicBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   38 | static char otaCommandTopicBuffer[128] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:44:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   44 |     char tempConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:45:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   45 |     char humConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:46:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   46 |     char ecConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:47:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   47 |     char phConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:48:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   48 |     char nitrogenConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:49:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   49 |     char phosphorusConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:50:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   50 |     char potassiumConfig[512];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:52:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   52 |     char cachedDeviceId[32];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:53:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   53 |     char cachedTopicPrefix[64];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:54:3: warning: variable 'haConfigCache' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   54 | } haConfigCache = {\"\", \"\", \"\", \"\", \"\", \"\", \"\", false, \"\", \"\"};\n      |   ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:57:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   57 | static char pubTopicCache[7][128] = {\"\", \"\", \"\", \"\", \"\", \"\", \"\"};\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:57:13: warning: variable 'pubTopicCache' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   57 | static char pubTopicCache[7][128] = {\"\", \"\", \"\", \"\", \"\", \"\", \"\"};\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:58:13: warning: variable 'pubTopicCacheValid' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   58 | static bool pubTopicCacheValid = false;\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:61:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   61 | static char cachedSensorJson[256] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:61:13: warning: variable 'cachedSensorJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   61 | static char cachedSensorJson[256] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:62:22: warning: variable 'lastCachedSensorTime' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   62 | static unsigned long lastCachedSensorTime = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:63:13: warning: variable 'sensorJsonCacheValid' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   63 | static bool sensorJsonCacheValid = false;\n      |             ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:68:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   68 |     char hostname[HOSTNAME_BUFFER_SIZE];\n      |     ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:72:3: warning: variable 'dnsCacheMqtt' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   66 | struct DNSCache\n      | static \n   67 | {\n   68 |     char hostname[HOSTNAME_BUFFER_SIZE];\n   69 |     IPAddress cachedIP;\n   70 |     unsigned long cacheTime;\n   71 |     bool isValid;\n   72 | } dnsCacheMqtt = {\"\", IPAddress(0, 0, 0, 0), 0, false};\n      |   ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:76:6: warning: function 'publishHomeAssistantConfig' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   76 | void publishHomeAssistantConfig();\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:77:6: warning: function 'invalidateHAConfigCache' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   77 | void invalidateHAConfigCache();               // ✅ НОВОЕ: Инвалидация кэша\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:78:11: warning: function 'getCachedIP' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   78 | IPAddress getCachedIP(const char* hostname);  // ✅ НОВОЕ: Forward declaration для DNS кэша\n      |           ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:81:13: warning: function 'getClientId' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   81 | const char* getClientId()\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:85:9: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   85 |         uint8_t mac[6];\n      |         ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:94:13: warning: function 'getMqttClientName' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   94 | const char* getMqttClientName()\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:100:5: warning: do not use 'else' after 'return' [readability-else-after-return]\n  100 |     else\n      |     ^~~~\n  101 |     {\n      |     ~\n  102 |         return getClientId();\n      |         ~~~~~~~~~~~~~~~~~~~~~\n  103 |     }\n      |     ~\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:107:13: warning: function 'getStatusTopic' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  107 | const char* getStatusTopic()\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:117:13: warning: function 'getCommandTopic' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  117 | const char* getCommandTopic()\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:127:20: warning: function 'getOtaStatusTopic' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  127 | static const char* getOtaStatusTopic()\n      |                    ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:129:41: warning: statement should be inside braces [readability-braces-around-statements]\n  129 |     if (otaStatusTopicBuffer[0] == '\\0')\n      |                                         ^\n      |                                          {\n  130 |         snprintf(otaStatusTopicBuffer, sizeof(otaStatusTopicBuffer), \"%s/ota/status\", config.mqttTopicPrefix);\n      |                                                                                                               \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:134:20: warning: function 'getOtaCommandTopic' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  134 | static const char* getOtaCommandTopic()\n      |                    ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:136:42: warning: statement should be inside braces [readability-braces-around-statements]\n  136 |     if (otaCommandTopicBuffer[0] == '\\0')\n      |                                          ^\n      |                                           {\n  137 |         snprintf(otaCommandTopicBuffer, sizeof(otaCommandTopicBuffer), \"%s/ota/command\", config.mqttTopicPrefix);\n      |                                                                                                                  \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:141:6: warning: function 'publishAvailability' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  141 | void publishAvailability(bool online)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:149:6: warning: function 'setupMQTT' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  149 | void setupMQTT()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:191:6: warning: function 'connectMQTT' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  191 | bool connectMQTT()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:311:6: warning: function 'handleMQTT' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  311 | void handleMQTT()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:347:9: warning: variable 'lastOtaStatus' of type 'char[64]' can be declared 'const' [misc-const-correctness]\n  347 |         static char lastOtaStatus[64] = \"\";\n      |         ^\n      |                     const \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:347:16: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  347 |         static char lastOtaStatus[64] = \"\";\n      |                ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:364:6: warning: function 'shouldPublishMqtt' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  364 | bool shouldPublishMqtt()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:457:6: warning: function 'publishSensorData' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  457 | void publishSensorData()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:478:5: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  478 |     unsigned long currentTime = millis();\n      |     ^\n      |                   const \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:512:12: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  512 |     static char stateTopicBuffer[128] = \"\";\n      |            ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:682:6: warning: function 'removeHomeAssistantConfig' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  682 | void removeHomeAssistantConfig()\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:698:6: warning: function 'handleMqttCommand' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  698 | void handleMqttCommand(const String& cmd)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:746:6: warning: function 'mqttCallback' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  746 | void mqttCallback(char* topic, byte* payload, unsigned int length)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:746:25: warning: pointer parameter 'topic' can be pointer to const [readability-non-const-parameter]\n  746 | void mqttCallback(char* topic, byte* payload, unsigned int length)\n      |                         ^\n      |                   const \nC:\\Git\\JXCT\\src\\mqtt_client.cpp:748:12: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]\n  748 |     String t = String(topic);\n      |            ^\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:750:46: warning: statement should be inside braces [readability-braces-around-statements]\n  750 |     for (unsigned int i = 0; i < length; i++) message += (char)payload[i];\n      |                                              ^                            \n      |                                               {\nC:\\Git\\JXCT\\src\\mqtt_client.cpp:778:5: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  778 |     unsigned long currentTime = millis();\n      |     ^\n      |                   const \n",
    "stderr": "443 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\mqtt_client.cpp.\n"
  },
  {
    "file": "src/ota_manager.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\ota_manager.cpp:16:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   16 | static char statusBuf[128] = \"Ожидание\";\n      |        ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:16:13: warning: variable 'statusBuf' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   16 | static char statusBuf[128] = \"Ожидание\";\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:17:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   17 | static char guardGap[8] = \"BEFORE\";       // часовой между statusBuf и URL\n      |        ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:17:13: warning: variable 'guardGap' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   17 | static char guardGap[8] = \"BEFORE\";       // часовой между statusBuf и URL\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:18:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   18 | static char manifestUrlGlobal[512] = \"\";  // Буфер URL манифеста (512 байт)\n      |        ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:18:13: warning: variable 'manifestUrlGlobal' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   18 | static char manifestUrlGlobal[512] = \"\";  // Буфер URL манифеста (512 байт)\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:19:20: warning: variable 'clientPtr' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   19 | static WiFiClient* clientPtr = nullptr;\n      |                    ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:20:13: warning: variable 'urlInitialized' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   20 | static bool urlInitialized = false;  // Флаг инициализации для защиты от перезаписи\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:23:13: warning: variable 'updateAvailable' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   23 | static bool updateAvailable = false;\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:24:15: warning: variable 'pendingUpdateUrl' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   24 | static String pendingUpdateUrl = \"\";\n      |               ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:25:15: warning: variable 'pendingUpdateSha256' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   25 | static String pendingUpdateSha256 = \"\";\n      |               ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:26:15: warning: variable 'pendingUpdateVersion' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   26 | static String pendingUpdateVersion = \"\";\n      |               ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:28:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   28 | static char guardSentinel[8] = \"GUARD!\";  // часовой после URL, как раньше\n      |        ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:28:13: warning: variable 'guardSentinel' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   28 | static char guardSentinel[8] = \"GUARD!\";  // часовой после URL, как раньше\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:30:13: warning: declaration uses identifier '_printGuard', which is reserved in the global namespace [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]\n   30 | static void _printGuard(const char* name, const char* tag, const char* current)\n      |             ^~~~~~~~~~~\n      |             printGuard\n   31 | {\n   32 |     logError(\"[GUARD] Повреждение (%s) после %s: '%s'\", name, tag, current);\n   33 | }\n   34 | \n   35 | void checkGuard(const char* tag)\n   36 | {\n   37 |     if (strncmp(guardGap, \"BEFORE\", 6) != 0)\n   38 |     {\n   39 |         _printGuard(\"GAP\", tag, guardGap);\n      |         ~~~~~~~~~~~\n      |         printGuard\n   40 |         strncpy(guardGap, \"BEFORE\", 7);\n   41 |     }\n   42 |     if (strncmp(guardSentinel, \"GUARD!\", 6) != 0)\n   43 |     {\n   44 |         _printGuard(\"AFTER\", tag, guardSentinel);\n      |         ~~~~~~~~~~~\n      |         printGuard\nC:\\Git\\JXCT\\src\\ota_manager.cpp:30:13: warning: function '_printGuard' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\nC:\\Git\\JXCT\\src\\ota_manager.cpp:54:6: warning: function 'setupOTA' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   54 | void setupOTA(const char* manifestUrl, WiFiClient& client)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\ota_manager.cpp:67:56: warning: implicit conversion 'const char *' -> 'bool' [readability-implicit-bool-conversion]\n   67 |     logSystem(\"[OTA] [SETUP DEBUG]   manifestUrl: %s\", manifestUrl ? manifestUrl : \"NULL\");\n      |                                                        ^\n      |                                                        (           != nullptr)\nC:\\Git\\JXCT\\src\\ota_manager.cpp:71:10: warning: implicit conversion 'const char *' -> 'bool' [readability-implicit-bool-conversion]\n   71 |     if (!manifestUrl || strlen(manifestUrl) < 20 || strstr(manifestUrl, \"github.com\") == nullptr)\n      |         ~^\n      |         (            == nullptr)\nC:\\Git\\JXCT\\src\\ota_manager.cpp:109:13: warning: function 'verifySha256' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  109 | static bool verifySha256(const uint8_t* calcDigest, const char* expectedHex)\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:111:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  111 |     char calcHex[65];\n      |     ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:112:33: warning: statement should be inside braces [readability-braces-around-statements]\n  112 |     for (int i = 0; i < 32; ++i) sprintf(&calcHex[i * 2], \"%02x\", calcDigest[i]);\n      |                                 ^                                                \n      |                                  {\nC:\\Git\\JXCT\\src\\ota_manager.cpp:112:43: warning: result of multiplication in type 'int' is used as a pointer offset after an implicit widening conversion to type 'ptrdiff_t' [bugprone-implicit-widening-of-multiplication-result]\n  112 |     for (int i = 0; i < 32; ++i) sprintf(&calcHex[i * 2], \"%02x\", calcDigest[i]);\n      |                                           ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:112:51: note: make conversion explicit to silence this warning\n   10 |     for (int i = 0; i < 32; ++i) sprintf(&calcHex[i * 2], \"%02x\", calcDigest[i]);\n      |                                                   ^~~~~\n      |                                                   static_cast<ptrdiff_t>( )\nC:\\Git\\JXCT\\src\\ota_manager.cpp:112:51: note: perform multiplication in a wider type\n  112 |     for (int i = 0; i < 32; ++i) sprintf(&calcHex[i * 2], \"%02x\", calcDigest[i]);\n      |                                                   ^    \n      |                                                   static_cast<ptrdiff_t>( )\nC:\\Git\\JXCT\\src\\ota_manager.cpp:117:13: warning: function 'initializeDownload' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  117 | static bool initializeDownload(HTTPClient& http, const String& binUrl, int& contentLen)\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:135:12: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  135 |     static char urlBuffer[256];\n      |            ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:197:13: warning: function 'downloadData' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  197 | static bool downloadData(HTTPClient& http, int contentLen, mbedtls_sha256_context& shaCtx)\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:222:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  222 |     uint8_t buf[512];  // Увеличиваем буфер для более быстрой загрузки\n      |     ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:269:21: warning: variable 'percent' of type 'int' can be declared 'const' [misc-const-correctness]\n  269 |                     int percent = (totalDownloaded * 100) / contentLen;\n      |                     ^\n      |                         const \nC:\\Git\\JXCT\\src\\ota_manager.cpp:269:35: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]\n  269 |                     int percent = (totalDownloaded * 100) / contentLen;\n      |                                   ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:316:13: warning: function 'downloadAndUpdate' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  316 | static bool downloadAndUpdate(const String& binUrl, const char* expectedSha256)\n      |             ^\nC:\\Git\\JXCT\\src\\ota_manager.cpp:383:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  383 |     uint8_t digest[32];\n      |     ^\ninclude\\ota_manager.h:3:10: error: 'WiFiClient.h' file not found [clang-diagnostic-error]\n    3 | #include <WiFiClient.h>\n      |          ^~~~~~~~~~~~~~\n",
    "stderr": "98 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\ota_manager.cpp.\n"
  },
  {
    "file": "src/routes_calibration.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\routes_calibration.cpp:1:10: error: 'LittleFS.h' file not found [clang-diagnostic-error]\n    1 | #include <LittleFS.h>\n      |          ^~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:11:18: warning: redundant 'webServer' declaration [readability-redundant-declaration]\n   11 | extern WebServer webServer;\n      | ~~~~~~~~~~~~~~~~~^~~~~~~~~~\ninclude\\web_routes.h:7:18: note: previously declared here\n    7 | extern WebServer webServer;\n      |                  ^\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:18:15: warning: function 'generateCalibrationPage' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   18 | static String generateCalibrationPage()\n      |               ^\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:46:5: warning: variable 'hasSand' of type 'bool' can be declared 'const' [misc-const-correctness]\n   46 |     bool hasSand = CalibrationManager::hasTable(SoilProfile::SAND);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:47:5: warning: variable 'hasSandPeat' of type 'bool' can be declared 'const' [misc-const-correctness]\n   47 |     bool hasSandPeat = CalibrationManager::hasTable(SoilProfile::SANDPEAT);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:48:5: warning: variable 'hasLoam' of type 'bool' can be declared 'const' [misc-const-correctness]\n   48 |     bool hasLoam = CalibrationManager::hasTable(SoilProfile::LOAM);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:49:5: warning: variable 'hasClay' of type 'bool' can be declared 'const' [misc-const-correctness]\n   49 |     bool hasClay = CalibrationManager::hasTable(SoilProfile::CLAY);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:50:5: warning: variable 'hasPeat' of type 'bool' can be declared 'const' [misc-const-correctness]\n   50 |     bool hasPeat = CalibrationManager::hasTable(SoilProfile::PEAT);\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:74:13: warning: function 'handleCalibrationPage' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   74 | static void handleCalibrationPage()\n      |             ^\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:86:13: warning: variable 'uploadFile' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   86 | static File uploadFile;\n      |             ^\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:87:20: warning: variable 'uploadProfile' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   87 | static SoilProfile uploadProfile = SoilProfile::SAND;\n      |                    ^\nC:\\Git\\JXCT\\src\\routes_calibration.cpp:96:34: warning: statement should be inside braces [readability-braces-around-statements]\n   96 |         if (profileStr == \"sand\")\n      |                                  ^\n      |                                   {\n   97 |             uploadProfile = SoilProfile::SAND;\n   98 |         else if (profileStr == \"sandpeat\")\n      |         } \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:98:43: warning: statement should be inside braces [readability-braces-around-statements]\n   98 |         else if (profileStr == \"sandpeat\")\n      |                                           ^\n      |                                            {\n   99 |             uploadProfile = SoilProfile::SANDPEAT;\n  100 |         else if (profileStr == \"loam\")\n      |         } \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:100:39: warning: statement should be inside braces [readability-braces-around-statements]\n  100 |         else if (profileStr == \"loam\")\n      |                                       ^\n      |                                        {\n  101 |             uploadProfile = SoilProfile::LOAM;\n  102 |         else if (profileStr == \"peat\")\n      |         } \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:102:39: warning: statement should be inside braces [readability-braces-around-statements]\n  102 |         else if (profileStr == \"peat\")\n      |                                       ^\n      |                                        {\n  103 |             uploadProfile = SoilProfile::PEAT;\n  104 |         else if (profileStr == \"clay\")\n      |         } \nC:\\Git\\JXCT\\src\\routes_calibration.cpp:104:39: warning: statement should be inside braces [readability-braces-around-statements]\n  104 |         else if (profileStr == \"clay\")\n      |                                       ^\n      |                                        {\n  105 |             uploadProfile = SoilProfile::CLAY;\n      |                                               \n",
    "stderr": "76 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\routes_calibration.cpp.\n"
  },
  {
    "file": "src/sensor_compensation.cpp",
    "returncode": 1,
    "stdout": "include\\sensor_compensation.h:23:23: error: use of undeclared identifier 'std' [clang-diagnostic-error]\n   23 | enum class SoilType : std::uint8_t\n      |                       ^\nsrc/sensor_compensation.cpp:2:10: error: 'math.h' file not found [clang-diagnostic-error]\n    2 | #include <math.h>\n      |          ^~~~~~~~\nsrc/sensor_compensation.cpp:2:10: warning: inclusion of deprecated C++ header 'math.h'; consider using 'cmath' instead [modernize-deprecated-headers]\n    2 | #include <math.h>\n      |          ^~~~~~~~\n      |          <cmath>\nsrc/sensor_compensation.cpp:3:10: warning: inclusion of deprecated C++ header 'time.h'; consider using 'ctime' instead [modernize-deprecated-headers]\n    3 | #include <time.h>\n      |          ^~~~~~~~\n      |          <ctime>\nsrc/sensor_compensation.cpp:7:18: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n    7 | static constexpr struct\n      |                  ^\nsrc/sensor_compensation.cpp:11:6: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   11 |     {0.15f},  // SAND\n      |      ^   ~\n      |          F\nsrc/sensor_compensation.cpp:12:6: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   12 |     {0.30f},  // LOAM\n      |      ^   ~\n      |          F\nsrc/sensor_compensation.cpp:13:6: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   13 |     {0.10f},  // PEAT\n      |      ^   ~\n      |          F\nsrc/sensor_compensation.cpp:14:6: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   14 |     {0.45f},  // CLAY\n      |      ^   ~\n      |          F\nsrc/sensor_compensation.cpp:15:6: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   15 |     {0.18f}   // SANDPEAT\n      |      ^   ~\n      |          F\nsrc/sensor_compensation.cpp:18:18: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                  ^\nsrc/sensor_compensation.cpp:18:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                                    ^     ~\n      |                                          F\nsrc/sensor_compensation.cpp:18:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                                             ^     ~\n      |                                                   F\nsrc/sensor_compensation.cpp:18:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                                                      ^     ~\n      |                                                            F\nsrc/sensor_compensation.cpp:18:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                                                               ^     ~\n      |                                                                     F\nsrc/sensor_compensation.cpp:18:72: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   18 | static constexpr float k_t_N[5] = {0.0041f, 0.0038f, 0.0028f, 0.0032f, 0.0040f};\n      |                                                                        ^     ~\n      |                                                                              F\nsrc/sensor_compensation.cpp:19:18: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                  ^\nsrc/sensor_compensation.cpp:19:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                                    ^     ~\n      |                                          F\nsrc/sensor_compensation.cpp:19:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                                             ^     ~\n      |                                                   F\nsrc/sensor_compensation.cpp:19:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                                                      ^     ~\n      |                                                            F\nsrc/sensor_compensation.cpp:19:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                                                               ^     ~\n      |                                                                     F\nsrc/sensor_compensation.cpp:19:72: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   19 | static constexpr float k_t_P[5] = {0.0053f, 0.0049f, 0.0035f, 0.0042f, 0.0051f};\n      |                                                                        ^     ~\n      |                                                                              F\nsrc/sensor_compensation.cpp:20:18: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                  ^\nsrc/sensor_compensation.cpp:20:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                                    ^     ~\n      |                                          F\nsrc/sensor_compensation.cpp:20:45: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                                             ^     ~\n      |                                                   F\nsrc/sensor_compensation.cpp:20:54: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                                                      ^     ~\n      |                                                            F\nsrc/sensor_compensation.cpp:20:63: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                                                               ^     ~\n      |                                                                     F\nsrc/sensor_compensation.cpp:20:72: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   20 | static constexpr float k_t_K[5] = {0.0032f, 0.0029f, 0.0018f, 0.0024f, 0.0031f};\n      |                                                                        ^     ~\n      |                                                                              F\nsrc/sensor_compensation.cpp:23:21: warning: function 'k_h_N' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   23 | static inline float k_h_N(float th)\n      |                     ^\nsrc/sensor_compensation.cpp:23:33: warning: parameter name 'th' is too short, expected at least 3 characters [readability-identifier-length]\n   23 | static inline float k_h_N(float th)\n      |                                 ^\nsrc/sensor_compensation.cpp:25:12: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   25 |     return 1.8f - 0.024f * th;\n      |            ^  ~\n      |               F\nsrc/sensor_compensation.cpp:25:19: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   25 |     return 1.8f - 0.024f * th;\n      |                   ^~~~~~~~~~~~\n      |                   (          )\nsrc/sensor_compensation.cpp:25:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   25 |     return 1.8f - 0.024f * th;\n      |                   ^    ~\n      |                        F\nsrc/sensor_compensation.cpp:27:21: warning: function 'k_h_P' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   27 | static inline float k_h_P(float th)\n      |                     ^\nsrc/sensor_compensation.cpp:27:33: warning: parameter name 'th' is too short, expected at least 3 characters [readability-identifier-length]\n   27 | static inline float k_h_P(float th)\n      |                                 ^\nsrc/sensor_compensation.cpp:29:12: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   29 |     return 1.6f - 0.018f * th;\n      |            ^  ~\n      |               F\nsrc/sensor_compensation.cpp:29:19: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   29 |     return 1.6f - 0.018f * th;\n      |                   ^~~~~~~~~~~~\n      |                   (          )\nsrc/sensor_compensation.cpp:29:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   29 |     return 1.6f - 0.018f * th;\n      |                   ^    ~\n      |                        F\nsrc/sensor_compensation.cpp:31:21: warning: function 'k_h_K' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   31 | static inline float k_h_K(float th)\n      |                     ^\nsrc/sensor_compensation.cpp:31:33: warning: parameter name 'th' is too short, expected at least 3 characters [readability-identifier-length]\n   31 | static inline float k_h_K(float th)\n      |                                 ^\nsrc/sensor_compensation.cpp:33:12: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   33 |     return 1.9f - 0.021f * th;\n      |            ^  ~\n      |               F\nsrc/sensor_compensation.cpp:33:19: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   33 |     return 1.9f - 0.021f * th;\n      |                   ^~~~~~~~~~~~\n      |                   (          )\nsrc/sensor_compensation.cpp:33:19: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   33 |     return 1.9f - 0.021f * th;\n      |                   ^    ~\n      |                        F\nsrc/sensor_compensation.cpp:38:30: warning: 2 adjacent parameters of 'correctEC' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   38 | float correctEC(float ecRaw, float T, float theta, SoilType soil)\n      |                              ^~~~~~~~~~~~~~~~~~~~\nsrc/sensor_compensation.cpp:38:36: note: the first parameter in the range is 'T'\n   38 | float correctEC(float ecRaw, float T, float theta, SoilType soil)\n      |                                    ^\nsrc/sensor_compensation.cpp:38:45: note: the last parameter in the range is 'theta'\n   38 | float correctEC(float ecRaw, float T, float theta, SoilType soil)\n      |                                             ^~~~~\nsrc/sensor_compensation.cpp:38:36: warning: parameter name 'T' is too short, expected at least 3 characters [readability-identifier-length]\n   38 | float correctEC(float ecRaw, float T, float theta, SoilType soil)\n      |                                    ^\nsrc/sensor_compensation.cpp:41:27: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   41 |     float ec25 = ecRaw / (1.0f + 0.021f * (T - 25.0f));\n      |                           ^  ~\n      |                              F\nsrc/sensor_compensation.cpp:41:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   41 |     float ec25 = ecRaw / (1.0f + 0.021f * (T - 25.0f));\n      |                                  ^    ~\n      |                                       F\nsrc/sensor_compensation.cpp:41:48: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   41 |     float ec25 = ecRaw / (1.0f + 0.021f * (T - 25.0f));\n      |                                                ^   ~\n      |                                                    F\nsrc/sensor_compensation.cpp:44:33: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   44 |     constexpr float THETA_SAT = 45.0f;  // %\n      |                                 ^   ~\n      |                                     F\nsrc/sensor_compensation.cpp:45:5: warning: variable 'k' of type 'float' can be declared 'const' [misc-const-correctness]\n   45 |     float k = SOIL_EC[(int)soil].k;\n      |     ^\n      |           const \nsrc/sensor_compensation.cpp:45:11: warning: variable name 'k' is too short, expected at least 3 characters [readability-identifier-length]\n   45 |     float k = SOIL_EC[(int)soil].k;\n      |           ^\nsrc/sensor_compensation.cpp:46:43: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   46 |     return ec25 * powf(THETA_SAT / theta, 1.0f + k);\n      |                                           ^  ~\n      |                                              F\nsrc/sensor_compensation.cpp:50:36: warning: parameter name 'T' is too short, expected at least 3 characters [readability-identifier-length]\n   50 | float correctPH(float phRaw, float T)\n      |                                    ^\nsrc/sensor_compensation.cpp:53:20: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]\n   53 |     return phRaw - 0.003f * (T - 25.0f);\n      |                    ^~~~~~~~~~~~~~~~~~~~~\n      |                    (                   )\nsrc/sensor_compensation.cpp:53:20: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   53 |     return phRaw - 0.003f * (T - 25.0f);\n      |                    ^    ~\n      |                         F\nsrc/sensor_compensation.cpp:53:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   53 |     return phRaw - 0.003f * (T - 25.0f);\n      |                                  ^   ~\n      |                                      F\nsrc/sensor_compensation.cpp:57:17: warning: 2 adjacent parameters of 'correctNPK' of similar type ('float') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                 ^~~~~~~~~~~~~~~~~~~~\nsrc/sensor_compensation.cpp:57:23: note: the first parameter in the range is 'T'\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                       ^\nsrc/sensor_compensation.cpp:57:32: note: the last parameter in the range is 'theta'\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                ^~~~~\nsrc/sensor_compensation.cpp:57:23: warning: parameter name 'T' is too short, expected at least 3 characters [readability-identifier-length]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                       ^\nsrc/sensor_compensation.cpp:57:39: warning: 3 adjacent parameters of 'correctNPK' of similar type ('float &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/sensor_compensation.cpp:57:46: note: the first parameter in the range is 'N'\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                              ^\nsrc/sensor_compensation.cpp:57:66: note: the last parameter in the range is 'K'\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                                                  ^\nsrc/sensor_compensation.cpp:57:46: warning: parameter name 'N' is too short, expected at least 3 characters [readability-identifier-length]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                              ^\nsrc/sensor_compensation.cpp:57:56: warning: parameter name 'P' is too short, expected at least 3 characters [readability-identifier-length]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                                        ^\nsrc/sensor_compensation.cpp:57:66: warning: parameter name 'K' is too short, expected at least 3 characters [readability-identifier-length]\n   57 | void correctNPK(float T, float theta, float& N, float& P, float& K, SoilType soil)\n      |                                                                  ^\nsrc/sensor_compensation.cpp:59:17: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   59 |     if (theta < 25.0f || theta > 60.0f)\n      |                 ^   ~\n      |                     F\nsrc/sensor_compensation.cpp:59:34: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   59 |     if (theta < 25.0f || theta > 60.0f)\n      |                                  ^   ~\n      |                                      F\nsrc/sensor_compensation.cpp:64:5: warning: variable 'idx' of type 'int' can be declared 'const' [misc-const-correctness]\n   64 |     int idx = (int)soil;\n      |     ^\n      |         const \nsrc/sensor_compensation.cpp:67:11: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   67 |     N *= (1.0f - k_t_N[idx] * (T - 25.0f));\n      |           ^  ~\n      |              F\nsrc/sensor_compensation.cpp:67:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   67 |     N *= (1.0f - k_t_N[idx] * (T - 25.0f));\n      |                                    ^   ~\n      |                                        F\nsrc/sensor_compensation.cpp:68:11: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   68 |     P *= (1.0f - k_t_P[idx] * (T - 25.0f));\n      |           ^  ~\n      |              F\nsrc/sensor_compensation.cpp:68:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   68 |     P *= (1.0f - k_t_P[idx] * (T - 25.0f));\n      |                                    ^   ~\n      |                                        F\nsrc/sensor_compensation.cpp:69:11: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   69 |     K *= (1.0f - k_t_K[idx] * (T - 25.0f));\n      |           ^  ~\n      |              F\nsrc/sensor_compensation.cpp:69:36: warning: floating point literal has suffix 'f', which is not uppercase [readability-uppercase-literal-suffix]\n   69 |     K *= (1.0f - k_t_K[idx] * (T - 25.0f));\n      |                                    ^   ~\n      |                                        F\n",
    "stderr": "162 warnings and 2 errors generated.\nError while processing C:\\Git\\JXCT\\src\\sensor_compensation.cpp.\n"
  },
  {
    "file": "src/thingspeak_client.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\thingspeak_client.cpp:5:10: warning: inclusion of deprecated C++ header 'ctype.h'; consider using 'cctype' instead [modernize-deprecated-headers]\n    5 | #include <ctype.h>\n      |          ^~~~~~~~~\n      |          <cctype>\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:15:13: warning: variable 'THINGSPEAK_API_URL' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   15 | const char* THINGSPEAK_API_URL = \"https://api.thingspeak.com/update\";\n      |             ^\n      | static \nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:17:22: warning: variable 'lastTsPublish' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   17 | static unsigned long lastTsPublish = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:18:12: warning: variable 'consecutiveFailCount' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   18 | static int consecutiveFailCount = 0;  // счётчик подряд неудач\n      |            ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:21:13: warning: function 'trim' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   21 | static void trim(char* s)\n      |             ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:21:24: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]\n   21 | static void trim(char* s)\n      |                        ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:23:10: warning: implicit conversion 'char *' -> 'bool' [readability-implicit-bool-conversion]\n   23 |     if (!s) return;\n      |         ~^\n      |            == nullptr\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:23:12: warning: statement should be inside braces [readability-braces-around-statements]\n   23 |     if (!s) return;\n      |            ^       \n      |             {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:25:11: warning: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length]\n   25 |     char* p = s;\n      |           ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:26:45: warning: statement should be inside braces [readability-braces-around-statements]\n   26 |     while (*p && isspace((unsigned char)*p)) ++p;\n      |                                             ^    \n      |                                              {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:27:16: warning: statement should be inside braces [readability-braces-around-statements]\n   27 |     if (p != s) memmove(s, p, strlen(p) + 1);\n      |                ^                             \n      |                 {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:31:58: warning: statement should be inside braces [readability-braces-around-statements]\n   31 |     while (len > 0 && isspace((unsigned char)s[len - 1])) s[--len] = '\\0';\n      |                                                          ^                \n      |                                                           {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:35:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   35 | static char thingSpeakLastPublishBuffer[32] = \"0\";\n      |        ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:35:13: warning: variable 'thingSpeakLastPublishBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   35 | static char thingSpeakLastPublishBuffer[32] = \"0\";\n      |             ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:36:8: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   36 | static char thingSpeakLastErrorBuffer[64] = \"\";\n      |        ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:36:13: warning: variable 'thingSpeakLastErrorBuffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   36 | static char thingSpeakLastErrorBuffer[64] = \"\";\n      |             ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:48:6: warning: function 'setupThingSpeak' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   48 | void setupThingSpeak(WiFiClient& client)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:56:41: warning: statement should be inside braces [readability-braces-around-statements]\n   56 |     if (!config.flags.thingSpeakEnabled) return false;\n      |                                         ^             \n      |                                          {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:57:24: warning: statement should be inside braces [readability-braces-around-statements]\n   57 |     if (!wifiConnected) return false;\n      |                        ^             \n      |                         {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:58:27: warning: statement should be inside braces [readability-braces-around-statements]\n   58 |     if (!sensorData.valid) return false;\n      |                           ^             \n      |                            {\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:60:5: warning: variable 'now' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n   60 |     unsigned long now = millis();\n      |     ^\n      |                   const \nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:61:57: warning: statement should be inside braces [readability-braces-around-statements]\n   61 |     if (now - lastTsPublish < config.thingSpeakInterval)  // too frequent\n      |                                                         ^\n      |                                                          {\n   62 |         return false;\n      |                      \nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:64:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   64 |     char apiKeyBuf[25];\n      |     ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:65:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n   65 |     char channelBuf[16];\n      |     ^\nC:\\Git\\JXCT\\src\\thingspeak_client.cpp:109:5: warning: do not use 'else' after 'return' [readability-else-after-return]\n  109 |     else if (res == -301)\n      |     ^~~~~~~~~~~~~~~~~~~~~\n  110 |     {\n      |     ~\n  111 |         logWarn(\"ThingSpeak: таймаут (-301), повторим позже\");\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  112 |         strlcpy(thingSpeakLastErrorBuffer, \"Timeout -301\", sizeof(thingSpeakLastErrorBuffer));\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  113 |     }\n      |     ~\n  114 |     else if (res == -401)\n      |     ~~~~~~~~~~~~~~~~~~~~~\n  115 |     {\n      |     ~\n  116 |         logDebug(\"ThingSpeak: превышен лимит публикаций\");\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  117 |         strlcpy(thingSpeakLastErrorBuffer, \"Превышен лимит публикаций (15 сек)\", sizeof(thingSpeakLastErrorBuffer));\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  118 |     }\n      |     ~\n  119 |     else if (res == -302)\n      |     ~~~~~~~~~~~~~~~~~~~~~\n  120 |     {\n      |     ~\n  121 |         logError(\"ThingSpeak: неверный API ключ\");\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  122 |         strlcpy(thingSpeakLastErrorBuffer, \"Неверный API ключ\", sizeof(thingSpeakLastErrorBuffer));\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  123 |     }\n      |     ~\n  124 |     else if (res == -304)\n      |     ~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\thingspeak_client.h:5:10: error: 'ThingSpeak.h' file not found [clang-diagnostic-error]\n    5 | #include <ThingSpeak.h>\n      |          ^~~~~~~~~~~~~~\n",
    "stderr": "121 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\thingspeak_client.cpp.\n"
  },
  {
    "file": "src/validation_utils.cpp",
    "returncode": 1,
    "stdout": "include\\validation_utils.h:10:10: error: 'vector' file not found [clang-diagnostic-error]\n   10 | #include <vector>\n      |          ^~~~~~~~\nsrc/validation_utils.cpp:15:18: warning: function 'validateSSID' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   15 | ValidationResult validateSSID(const String& ssid)\n      |                  ^\n      | static \nsrc/validation_utils.cpp:28:18: warning: function 'validatePassword' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   28 | ValidationResult validatePassword(const String& password)\n      |                  ^\n      | static \nsrc/validation_utils.cpp:41:18: warning: function 'validateMQTTServer' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   41 | ValidationResult validateMQTTServer(const String& server)\n      |                  ^\n      | static \nsrc/validation_utils.cpp:68:18: warning: function 'validateThingSpeakAPIKey' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   68 | ValidationResult validateThingSpeakAPIKey(const String& apiKey)\n      |                  ^\n      | static \nsrc/validation_utils.cpp:145:35: warning: parameter name 'ph' is too short, expected at least 3 characters [readability-identifier-length]\n  145 | ValidationResult validatePH(float ph)\n      |                                   ^\nsrc/validation_utils.cpp:150:35: warning: parameter name 'ec' is too short, expected at least 3 characters [readability-identifier-length]\n  150 | ValidationResult validateEC(float ec)\n      |                                   ^\nsrc/validation_utils.cpp:315:6: warning: function 'isValidIPAddress' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  315 | bool isValidIPAddress(const String& ip)\n      |      ^\n      | static \nsrc/validation_utils.cpp:315:37: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]\n  315 | bool isValidIPAddress(const String& ip)\n      |                                     ^\nsrc/validation_utils.cpp:349:6: warning: function 'isValidHostname' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  349 | bool isValidHostname(const String& hostname)\n      |      ^\n      | static \nsrc/validation_utils.cpp:374:8: warning: function 'formatValidationErrors' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  374 | String formatValidationErrors(const ConfigValidationResult& result)\n      |        ^\n      | static \nsrc/validation_utils.cpp:389:8: warning: function 'formatSensorValidationErrors' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  389 | String formatSensorValidationErrors(const SensorValidationResult& result)\n      |        ^\n      | static \nsrc/validation_utils.cpp:391:24: warning: statement should be inside braces [readability-braces-around-statements]\n  391 |     if (result.isValid) return \"\";\n      |                        ^          \n      |                         {\n",
    "stderr": "314 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\validation_utils.cpp.\n"
  },
  {
    "file": "src/wifi_manager.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\wifi_manager.cpp:22:1: warning: replace macro with enum [modernize-macro-to-enum]\n   22 | #define RESET_BUTTON_PIN 0             // GPIO0 для кнопки сброса\n      | ^~~~~~~\n      |                          =,\n   23 | #define WIFI_RECONNECT_INTERVAL 30000  // Интервал между попытками переподключения (30 секунд)\n      | ~~~~~~~\n      |                                 =\n   24 | \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:22:9: warning: macro 'RESET_BUTTON_PIN' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   22 | #define RESET_BUTTON_PIN 0             // GPIO0 для кнопки сброса\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:23:9: warning: macro 'WIFI_RECONNECT_INTERVAL' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   23 | #define WIFI_RECONNECT_INTERVAL 30000  // Интервал между попытками переподключения (30 секунд)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:26:1: warning: replace macro with enum [modernize-macro-to-enum]\n   26 | #define LED_FAST_BLINK_INTERVAL 100  // Интервал быстрого мигания светодиода (мс)\n      | ^~~~~~~\n      |                                 =  ,\n   27 | #define LED_SLOW_BLINK_INTERVAL 500  // Интервал медленного мигания светодиода (мс)\n      | ~~~~~~~\n      |                                 =  ,\n   28 | #define WIFI_MODE_DELAY 100          // Задержка при смене режима WiFi (мс)\n      | ~~~~~~~\n      |                         =  ,\n   29 | #define NTP_TIMEOUT_MS 5000          // Таймаут для NTP синхронизации (мс)\n      | ~~~~~~~\n      |                        =   ,\n   30 | #define RESET_BUTTON_HOLD_TIME 5000  // Время удержания кнопки сброса (мс)\n      | ~~~~~~~\n      |                                =   ,\n   31 | #define RESTART_DELAY_MS 1000        // Задержка перед перезагрузкой (мс)\n      | ~~~~~~~\n      |                          =   ,\n   32 | #define DNS_PORT 53                  // Порт DNS сервера\n      | ~~~~~~~\n      |                  = ,\n   33 | #define MAC_ADDRESS_BUFFER_SIZE 20   // Размер буфера для MAC адреса\n      | ~~~~~~~\n      |                                 =\n   34 | \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:26:9: warning: macro 'LED_FAST_BLINK_INTERVAL' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   26 | #define LED_FAST_BLINK_INTERVAL 100  // Интервал быстрого мигания светодиода (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:27:9: warning: macro 'LED_SLOW_BLINK_INTERVAL' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   27 | #define LED_SLOW_BLINK_INTERVAL 500  // Интервал медленного мигания светодиода (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:28:9: warning: macro 'WIFI_MODE_DELAY' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   28 | #define WIFI_MODE_DELAY 100          // Задержка при смене режима WiFi (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:29:9: warning: macro 'NTP_TIMEOUT_MS' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   29 | #define NTP_TIMEOUT_MS 5000          // Таймаут для NTP синхронизации (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:30:9: warning: macro 'RESET_BUTTON_HOLD_TIME' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   30 | #define RESET_BUTTON_HOLD_TIME 5000  // Время удержания кнопки сброса (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:31:9: warning: macro 'RESTART_DELAY_MS' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   31 | #define RESTART_DELAY_MS 1000        // Задержка перед перезагрузкой (мс)\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:32:9: warning: macro 'DNS_PORT' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   32 | #define DNS_PORT 53                  // Порт DNS сервера\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:33:9: warning: macro 'MAC_ADDRESS_BUFFER_SIZE' defines an integral constant; prefer an enum instead [modernize-macro-to-enum]\n   33 | #define MAC_ADDRESS_BUFFER_SIZE 20   // Размер буфера для MAC адреса\n      |         ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:39:11: warning: variable 'dnsServer' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   39 | DNSServer dnsServer;\n      |           ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:42:15: warning: variable 'ledLastToggle' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   42 | unsigned long ledLastToggle = 0;\n      |               ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:43:6: warning: variable 'ledState' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   43 | bool ledState = false;\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:44:15: warning: variable 'ledBlinkInterval' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   44 | unsigned long ledBlinkInterval = 0;\n      |               ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:45:6: warning: variable 'ledFastBlink' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   45 | bool ledFastBlink = false;\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:50:6: warning: redundant 'handleRoot' declaration [readability-redundant-declaration]\n   50 | void handleRoot();\n      | ~~~~~^~~~~~~~~~~~~\ninclude\\web_routes.h:62:6: note: previously declared here\n   62 | void handleRoot();\n      |      ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:82:9: warning: variable 'now' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n   82 |         unsigned long now = millis();\n      |         ^\n      |                       const \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:93:8: warning: function 'navHtml' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   93 | String navHtml()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:217:8: warning: function 'getApSsid' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  217 | String getApSsid()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:219:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  219 |     uint8_t mac[6];\n      |     ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:221:5: warning: do not declare C-style arrays, use 'std::array' instead [modernize-avoid-c-arrays]\n  221 |     char buf[MAC_ADDRESS_BUFFER_SIZE];\n      |     ^\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:223:21: warning: implicit conversion 'char' -> 'bool' [readability-implicit-bool-conversion]\n  223 |     for (int i = 0; buf[i]; ++i) buf[i] = tolower(buf[i]);\n      |                     ^     \n      |                            != 0\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:223:33: warning: statement should be inside braces [readability-braces-around-statements]\n  223 |     for (int i = 0; buf[i]; ++i) buf[i] = tolower(buf[i]);\n      |                                 ^                         \n      |                                  {\nC:\\Git\\JXCT\\src\\wifi_manager.cpp:259:9: warning: variable 'startTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  259 |         unsigned long startTime = millis();\n      |         ^\n      |                       const \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:296:17: warning: variable 'ntpStart' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  296 |                 unsigned long ntpStart = millis();\n      |                 ^\n      |                               const \nC:\\Git\\JXCT\\src\\wifi_manager.cpp:323:5: warning: variable 'isPressed' of type 'bool' can be declared 'const' [misc-const-correctness]\n  323 |     bool isPressed = digitalRead(RESET_BUTTON_PIN) == LOW;\n      |     ^\n      |          const \nC:\\Git\\JXCT\\src\\wifi_manager.h:5:10: error: 'DNSServer.h' file not found [clang-diagnostic-error]\n    5 | #include <DNSServer.h>\n      |          ^~~~~~~~~~~~~\n",
    "stderr": "415 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\wifi_manager.cpp.\n"
  },
  {
    "file": "src/web/csrf_protection.cpp",
    "returncode": 1,
    "stdout": "error: too many errors emitted, stopping now [clang-diagnostic-error]\nC:\\Git\\JXCT\\src\\web\\../../include/web/csrf_protection.h:18:1: error: unknown type name 'String' [clang-diagnostic-error]\n   18 | String generateCSRFToken();\n      | ^\nC:\\Git\\JXCT\\src\\web\\../../include/web/csrf_protection.h:19:30: error: unknown type name 'String' [clang-diagnostic-error]\n   19 | bool validateCSRFToken(const String& token);\n      |                              ^\nC:\\Git\\JXCT\\src\\web\\../../include/web/csrf_protection.h:20:1: error: unknown type name 'String' [clang-diagnostic-error]\n   20 | String getCSRFHiddenField();\n      | ^\nC:\\Git\\JXCT\\src\\web\\../../include/web/csrf_protection.h:25:1: error: unknown type name 'String' [clang-diagnostic-error]\n   25 | String methodToString(HTTPMethod method);\n      | ^\nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:20:15: warning: variable 'currentCSRFToken' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   20 | static String currentCSRFToken = \"\";\n      |               ^\nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:21:22: warning: variable 'tokenGeneratedTime' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   21 | static unsigned long tokenGeneratedTime = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:28:8: warning: function 'generateCSRFToken' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   28 | String generateCSRFToken()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:55:6: warning: function 'validateCSRFToken' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   55 | bool validateCSRFToken(const String& token)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:65:5: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n   65 |     unsigned long currentTime = millis();\n      |     ^\n      |                   const \nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:88:8: warning: function 'getCSRFHiddenField' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   88 | String getCSRFHiddenField()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:96:12: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n   96 |     return \"<input type=\\\"hidden\\\" name=\\\"csrf_token\\\" value=\\\"\" + currentCSRFToken + \"\\\">\";\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |            R\"(<input type=\"hidden\" name=\"csrf_token\" value=\")\"\nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:102:5: warning: variable 'method' of type 'HTTPMethod' can be declared 'const' [misc-const-correctness]\n  102 |     HTTPMethod method = webServer.method();\n      |     ^\n      |                const \nC:\\Git\\JXCT\\src\\web\\csrf_protection.cpp:149:8: warning: function 'methodToString' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  149 | String methodToString(HTTPMethod method)\n      |        ^\n      | static \ntest/stubs\\WebServer.h:18:5: error: unknown type name 'String' [clang-diagnostic-error]\n   18 |     String toString() const\n      |     ^\ntest/stubs\\WebServer.h:20:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   20 |         return String(\"127.0.0.1\");\n      |                ^\ntest/stubs\\WebServer.h:37:23: error: unknown type name 'String' [clang-diagnostic-error]\n   37 |     bool hasArg(const String&) const\n      |                       ^\ntest/stubs\\WebServer.h:41:5: error: unknown type name 'String' [clang-diagnostic-error]\n   41 |     String arg(const String&) const\n      |     ^\ntest/stubs\\WebServer.h:41:22: error: unknown type name 'String' [clang-diagnostic-error]\n   41 |     String arg(const String&) const\n      |                      ^\ntest/stubs\\WebServer.h:43:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   43 |         return String(\"\");\n      |                ^\ntest/stubs\\WebServer.h:45:26: error: unknown type name 'String' [clang-diagnostic-error]\n   45 |     bool hasHeader(const String&) const\n      |                          ^\ntest/stubs\\WebServer.h:49:5: error: unknown type name 'String' [clang-diagnostic-error]\n   49 |     String header(const String&) const\n      |     ^\ntest/stubs\\WebServer.h:49:25: error: unknown type name 'String' [clang-diagnostic-error]\n   49 |     String header(const String&) const\n      |                         ^\ntest/stubs\\WebServer.h:51:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   51 |         return String(\"\");\n      |                ^\ntest/stubs\\WebServer.h:57:5: error: unknown type name 'String' [clang-diagnostic-error]\n   57 |     String uri() const\n      |     ^\ntest/stubs\\WebServer.h:59:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   59 |         return String(\"/\");\n      |                ^\ntest/stubs\\WebServer.h:65:39: error: unknown type name 'String' [clang-diagnostic-error]\n   65 |     void send(int, const char*, const String&) {}\n      |                                       ^\ntest/stubs\\WebServer.h:66:27: error: unknown type name 'String' [clang-diagnostic-error]\n   66 |     void sendHeader(const String&, const String&, bool = false) {}\n      |                           ^\ntest/stubs\\WebServer.h:66:42: error: unknown type name 'String' [clang-diagnostic-error]\n   66 |     void sendHeader(const String&, const String&, bool = false) {}\n      |                                          ^\n",
    "stderr": "47 warnings and 20 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\csrf_protection.cpp.\n"
  },
  {
    "file": "src/web/error_handlers.cpp",
    "returncode": 1,
    "stdout": "error: too many errors emitted, stopping now [clang-diagnostic-error]\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:53:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n   53 |     uint16_t mqttPort;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:58:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   58 |     uint8_t mqttQos;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:63:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n   63 |     uint16_t thingspeakInterval;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:72:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   72 |     uint32_t ntpUpdateInterval;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:75:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   75 |     uint8_t modbusId;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:81:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   81 |     uint32_t sensorReadInterval;   // Интервал опроса датчика (1-300 сек, по умолчанию 1 сек)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:82:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   82 |     uint32_t mqttPublishInterval;  // Интервал MQTT публикации (1-60 мин)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:83:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   83 |     uint32_t thingSpeakInterval;   // Интервал ThingSpeak (5-120 мин)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:84:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   84 |     uint32_t webUpdateInterval;    // Интервал обновления веб-интерфейса (5-60 сек)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:94:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   94 |     uint8_t movingAverageWindow;   // Размер окна (5-15 измерений)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:95:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   95 |     uint8_t forcePublishCycles;    // Принудительная публикация (5-50 циклов)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:96:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   96 |     uint8_t filterAlgorithm;       // 0=среднее, 1=медиана\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:97:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   97 |     uint8_t outlierFilterEnabled;  // 0=отключен, 1=включен (>2σ)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:100:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  100 |     uint8_t soilProfile;  // 0 = sand, 1 = loam, 2 = peat\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:109:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n  109 |     uint16_t irrigationHoldMinutes;      // мин удержания повышенной влажности\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:110:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n  110 |     uint16_t postIrrigationHoldMinutes;  // мин игнорировать коррекцию после полива\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:113:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  113 |     uint8_t environmentType;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:118:9: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  118 |         uint8_t hassEnabled : 1;            // 1 бит вместо 1 байта\n      |         ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:119:9: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  119 |         uint8_t useRealSensor : 1;          // 1 бит вместо 1 байта\n      |         ^\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:6: warning: function 'validateInterval' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:23: warning: 2 adjacent parameters of 'validateInterval' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:37: note: the first parameter in the range is 'argName'\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                     ^~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:50: note: the last parameter in the range is 'minValue'\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                                  ^~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:46: note: 'const int &' and 'int' parameters accept and bind the same kind of values\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                              ^\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:60: warning: 2 adjacent parameters of 'validateInterval' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:64: note: the first parameter in the range is 'maxValue'\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                                                ^~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:88: note: the last parameter in the range is 'description'\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                                                                        ^~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:9:74: note: 'int' and 'const int &' parameters accept and bind the same kind of values\n    9 | bool validateInterval(const String& argName, int minValue, int maxValue, const String& description)\n      |                                                                          ^\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:83:67: warning: statement should be inside braces [readability-braces-around-statements]\n   83 |     if (!validateInterval(\"mqtt_port\", 1, 65535, \"MQTT порт\")) return false;\n      |                                                               ^             \n      |                                                                {\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:84:84: warning: statement should be inside braces [readability-braces-around-statements]\n   84 |     if (!validateInterval(\"ntp_interval\", 10000, 86400000, \"NTP интервал\")) return false;\n      |                                                                            ^             \n      |                                                                             {\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:85:104: warning: statement should be inside braces [readability-braces-around-statements]\n   85 |     if (!validateInterval(\"sensor_read\", 1000, 300000, \"интервал чтения датчика\")) return false;\n      |                                                                                   ^             \n      |                                                                                    {\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:86:104: warning: statement should be inside braces [readability-braces-around-statements]\n   86 |     if (!validateInterval(\"mqtt_publish\", 1000, 3600000, \"интервал MQTT публикации\")) return false;\n      |                                                                                      ^             \n      |                                                                                       {\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:87:97: warning: statement should be inside braces [readability-braces-around-statements]\n   87 |     if (!validateInterval(\"thingspeak_interval\", 15000, 7200000, \"интервал ThingSpeak\")) return false;\n      |                                                                                         ^             \n      |                                                                                          {\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:93:6: warning: function 'handleUploadError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   93 | void handleUploadError(const String& error)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:101:6: warning: function 'isFeatureAvailable' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  101 | bool isFeatureAvailable(const String& feature)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:109:20: warning: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr]\n  107 |         if (feature == \"main\" || feature == \"save\" || feature == \"status\")\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |         return static_cast<bool>(feature == \"main\" || feature == \"save\" || feature == \"status\")\n  108 |         {\n      |         ~\n  109 |             return true;\n      |             ~~~~~~~^~~~~\n  110 |         }\n      |         ~\n  111 |         return false;\n      |         ~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:122:6: warning: function 'logWebRequest' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  122 | void logWebRequest(const String& method, const String& uri, const String& clientIP)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:122:20: warning: 3 adjacent parameters of 'logWebRequest' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  122 | void logWebRequest(const String& method, const String& uri, const String& clientIP)\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:122:34: note: the first parameter in the range is 'method'\n  122 | void logWebRequest(const String& method, const String& uri, const String& clientIP)\n      |                                  ^~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:122:75: note: the last parameter in the range is 'clientIP'\n  122 | void logWebRequest(const String& method, const String& uri, const String& clientIP)\n      |                                                                           ^~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:142:8: warning: function 'generateValidationErrorResponse' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  142 | String generateValidationErrorResponse(const String& errorMsg)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:158:6: warning: function 'handleCriticalError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  158 | void handleCriticalError(const String& error)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:171:6: warning: function 'isRouteAvailable' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  171 | bool isRouteAvailable(const String& uri)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:185:6: warning: function 'checkRouteAccess' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  185 | bool checkRouteAccess(const String& routeName, const String& icon)\n      |      ^\n      | static \nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:185:23: warning: 2 adjacent parameters of 'checkRouteAccess' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  185 | bool checkRouteAccess(const String& routeName, const String& icon)\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:185:37: note: the first parameter in the range is 'routeName'\n  185 | bool checkRouteAccess(const String& routeName, const String& icon)\n      |                                     ^~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\error_handlers.cpp:185:62: note: the last parameter in the range is 'icon'\n  185 | bool checkRouteAccess(const String& routeName, const String& icon)\n      |                                                              ^~~~\n",
    "stderr": "105 warnings and 20 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\error_handlers.cpp.\n"
  },
  {
    "file": "src/web/routes_config.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\web\\routes_config.cpp:7:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    7 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:19:18: warning: redundant 'webServer' declaration [readability-redundant-declaration]\n   19 | extern WebServer webServer;\n      | ~~~~~~~~~~~~~~~~~^~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include/web_routes.h:7:18: note: previously declared here\n    7 | extern WebServer webServer;\n      |                  ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:20:17: warning: redundant 'currentWiFiMode' declaration [readability-redundant-declaration]\n   20 | extern WiFiMode currentWiFiMode;\n      | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include\\../src/wifi_manager.h:19:17: note: previously declared here\n   19 | extern WiFiMode currentWiFiMode;\n      |                 ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:24:13: warning: redundant 'loadConfig' declaration [readability-redundant-declaration]\n   24 | extern void loadConfig();\n      | ~~~~~~~~~~~~^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:133:6: note: previously declared here\n  133 | void loadConfig();\n      |      ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:25:13: warning: redundant 'saveConfig' declaration [readability-redundant-declaration]\n   25 | extern void saveConfig();\n      | ~~~~~~~~~~~~^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:134:6: note: previously declared here\n  134 | void saveConfig();\n      |      ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:28:13: warning: function 'sendConfigExportJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   28 | static void sendConfigExportJson();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:195:22: warning: variable 'valSensor' of type 'ValidationResult' can be declared 'const' [misc-const-correctness]\n  195 |                      ValidationResult valSensor = validateSensorReadInterval(sensorMs);\n      |                      ^\n      |                                       const \nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:196:22: warning: variable 'valMqtt' of type 'ValidationResult' can be declared 'const' [misc-const-correctness]\n  196 |                      ValidationResult valMqtt = validateMQTTPublishInterval(mqttMs);\n      |                      ^\n      |                                       const \nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:197:22: warning: variable 'valTs' of type 'ValidationResult' can be declared 'const' [misc-const-correctness]\n  197 |                      ValidationResult valTs = validateThingSpeakInterval(tsMs);\n      |                      ^\n      |                                       const \nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:368:68: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  368 |                 webServer.send(HTTP_FORBIDDEN, \"application/json\", \"{\\\"error\\\":\\\"CSRF token invalid\\\"}\");\n      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                                    R\"({\"error\":\"CSRF token invalid\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:412:25: warning: variable name 'up' is too short, expected at least 3 characters [readability-identifier-length]\n  412 |             HTTPUpload& up = webServer.upload();\n      |                         ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:433:13: warning: function 'sendConfigExportJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  433 | static void sendConfigExportJson()\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_config.cpp:454:16: warning: variable name 'ts' is too short, expected at least 3 characters [readability-identifier-length]\n  454 |     JsonObject ts = root.createNestedObject(\"thingspeak\");\n      |                ^\n",
    "stderr": "395 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_config.cpp.\n"
  },
  {
    "file": "src/web/routes_data.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\web\\routes_data.cpp:7:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    7 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:10:10: warning: inclusion of deprecated C++ header 'time.h'; consider using 'ctime' instead [modernize-deprecated-headers]\n   10 | #include <time.h>\n      |          ^~~~~~~~\n      |          <ctime>\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:31:13: warning: variable 'uploadFile' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   31 | static File uploadFile;\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:32:20: warning: variable 'uploadProfile' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   32 | static SoilProfile uploadProfile = SoilProfile::SAND;\n      |                    ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:39:18: warning: function 'computeRecommendations' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   39 | static RecValues computeRecommendations()\n      |                  ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:44:17: warning: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length]\n   44 |     const char* id = config.cropId;\n      |                 ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:47:39: warning: statement should be inside braces [readability-braces-around-statements]\n   47 |         if (strcmp(id, \"tomato\") == 0)\n      |                                       ^\n      |                                        {\n   48 |             rec = {TEST_DATA_TEMP_BASE + 2, TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE + 300, TEST_DATA_PH_BASE + 0.2F,\n   49 |                    TEST_DATA_NPK_BASE + 15, TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE + 5};\n   50 |         else if (strcmp(id, \"cucumber\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:50:46: warning: statement should be inside braces [readability-braces-around-statements]\n   50 |         else if (strcmp(id, \"cucumber\") == 0)\n      |                                              ^\n      |                                               {\n   51 |             rec = {TEST_DATA_TEMP_BASE + 4, TEST_DATA_HUM_BASE + 10, TEST_DATA_EC_BASE + 600, TEST_DATA_PH_BASE - 0.1F,\n   52 |                    TEST_DATA_NPK_BASE + 10, TEST_DATA_NPK_BASE - 13, TEST_DATA_NPK_BASE + 3};\n   53 |         else if (strcmp(id, \"pepper\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:53:44: warning: statement should be inside braces [readability-braces-around-statements]\n   53 |         else if (strcmp(id, \"pepper\") == 0)\n      |                                            ^\n      |                                             {\n   54 |             rec = {TEST_DATA_TEMP_BASE + 3, TEST_DATA_HUM_BASE + 5,  TEST_DATA_EC_BASE + 400, TEST_DATA_PH_BASE,\n   55 |                    TEST_DATA_NPK_BASE + 13, TEST_DATA_NPK_BASE - 14, TEST_DATA_NPK_BASE + 4};\n   56 |         else if (strcmp(id, \"lettuce\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:56:45: warning: statement should be inside braces [readability-braces-around-statements]\n   56 |         else if (strcmp(id, \"lettuce\") == 0)\n      |                                             ^\n      |                                              {\n   57 |             rec = {TEST_DATA_TEMP_BASE,    TEST_DATA_HUM_BASE + 15, TEST_DATA_EC_BASE - 200, TEST_DATA_PH_BASE - 0.3F,\n   58 |                    TEST_DATA_NPK_BASE + 5, TEST_DATA_NPK_BASE - 17, TEST_DATA_NPK_BASE};\n   59 |         else if (strcmp(id, \"blueberry\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:59:47: warning: statement should be inside braces [readability-braces-around-statements]\n   59 |         else if (strcmp(id, \"blueberry\") == 0)\n      |                                               ^\n      |                                                {\n   60 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE + 5,  TEST_DATA_EC_BASE,     TEST_DATA_PH_BASE - 1.3F,\n   61 |                    TEST_DATA_NPK_BASE + 5,  TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE - 5};\n   62 |         else if (strcmp(id, \"lawn\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:62:42: warning: statement should be inside braces [readability-braces-around-statements]\n   62 |         else if (strcmp(id, \"lawn\") == 0)\n      |                                          ^\n      |                                           {\n   63 |             rec = {TEST_DATA_TEMP_BASE, TEST_DATA_HUM_BASE - 10, TEST_DATA_EC_BASE - 400, TEST_DATA_PH_BASE,\n   64 |                    TEST_DATA_NPK_BASE,  TEST_DATA_NPK_BASE - 17, TEST_DATA_NPK_BASE - 5};\n   65 |         else if (strcmp(id, \"grape\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:65:43: warning: statement should be inside braces [readability-braces-around-statements]\n   65 |         else if (strcmp(id, \"grape\") == 0)\n      |                                           ^\n      |                                            {\n   66 |             rec = {TEST_DATA_TEMP_BASE + 2, TEST_DATA_HUM_BASE - 5,  TEST_DATA_EC_BASE + 200, TEST_DATA_PH_BASE + 0.2F,\n   67 |                    TEST_DATA_NPK_BASE + 10, TEST_DATA_NPK_BASE - 13, TEST_DATA_NPK_BASE};\n   68 |         else if (strcmp(id, \"conifer\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:68:45: warning: statement should be inside braces [readability-braces-around-statements]\n   68 |         else if (strcmp(id, \"conifer\") == 0)\n      |                                             ^\n      |                                              {\n   69 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE - 5,  TEST_DATA_EC_BASE - 200, TEST_DATA_PH_BASE - 0.8F,\n   70 |                    TEST_DATA_NPK_BASE,      TEST_DATA_NPK_BASE - 17, TEST_DATA_NPK_BASE - 10};\n   71 |         else if (strcmp(id, \"strawberry\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:71:48: warning: statement should be inside braces [readability-braces-around-statements]\n   71 |         else if (strcmp(id, \"strawberry\") == 0)\n      |                                                ^\n      |                                                 {\n   72 |             rec = {TEST_DATA_TEMP_BASE,     TEST_DATA_HUM_BASE + 10, TEST_DATA_EC_BASE + 300, TEST_DATA_PH_BASE - 0.3F,\n   73 |                    TEST_DATA_NPK_BASE + 10, TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE};\n   74 |         else if (strcmp(id, \"apple\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:74:43: warning: statement should be inside braces [readability-braces-around-statements]\n   74 |         else if (strcmp(id, \"apple\") == 0)\n      |                                           ^\n      |                                            {\n   75 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE,     TEST_DATA_PH_BASE + 0.2F,\n   76 |                    TEST_DATA_NPK_BASE,      TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE - 5};\n   77 |         else if (strcmp(id, \"pear\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:75:13: warning: repeated branch body in conditional chain [bugprone-branch-clone]\n   75 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE,     TEST_DATA_PH_BASE + 0.2F,\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:76:93: note: end of the original\n   76 |                    TEST_DATA_NPK_BASE,      TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE - 5};\n      |                                                                                             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:78:13: note: clone 1 starts here\n   78 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE,     TEST_DATA_PH_BASE + 0.2F,\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:77:42: warning: statement should be inside braces [readability-braces-around-statements]\n   77 |         else if (strcmp(id, \"pear\") == 0)\n      |                                          ^\n      |                                           {\n   78 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE,     TEST_DATA_PH_BASE + 0.2F,\n   79 |                    TEST_DATA_NPK_BASE,      TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE - 5};\n   80 |         else if (strcmp(id, \"cherry\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:80:44: warning: statement should be inside braces [readability-braces-around-statements]\n   80 |         else if (strcmp(id, \"cherry\") == 0)\n      |                                            ^\n      |                                             {\n   81 |             rec = {TEST_DATA_TEMP_BASE,    TEST_DATA_HUM_BASE,      TEST_DATA_EC_BASE + 100, TEST_DATA_PH_BASE + 0.2F,\n   82 |                    TEST_DATA_NPK_BASE + 5, TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE};\n   83 |         else if (strcmp(id, \"raspberry\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:83:47: warning: statement should be inside braces [readability-braces-around-statements]\n   83 |         else if (strcmp(id, \"raspberry\") == 0)\n      |                                               ^\n      |                                                {\n   84 |             rec = {TEST_DATA_TEMP_BASE - 2, TEST_DATA_HUM_BASE + 5,  TEST_DATA_EC_BASE - 100, TEST_DATA_PH_BASE - 0.1F,\n   85 |                    TEST_DATA_NPK_BASE + 5,  TEST_DATA_NPK_BASE - 15, TEST_DATA_NPK_BASE - 3};\n   86 |         else if (strcmp(id, \"currant\") == 0)\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:86:45: warning: statement should be inside braces [readability-braces-around-statements]\n   86 |         else if (strcmp(id, \"currant\") == 0)\n      |                                             ^\n      |                                              {\n   87 |             rec = {TEST_DATA_TEMP_BASE - 3, TEST_DATA_HUM_BASE + 5,  TEST_DATA_EC_BASE - 200, TEST_DATA_PH_BASE - 0.1F,\n   88 |                    TEST_DATA_NPK_BASE,      TEST_DATA_NPK_BASE - 16, TEST_DATA_NPK_BASE - 5};\n      |                                                                                              \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:103:5: warning: repeated branch body in conditional chain [bugprone-branch-clone]\n  103 |     {\n      |     ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:105:6: note: end of the original\n  105 |     }\n      |      ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:107:5: note: clone 1 starts here\n  107 |     {\n      |     ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:137:20: warning: variable name 'ti' is too short, expected at least 3 characters [readability-identifier-length]\n  137 |         struct tm* ti = localtime(&now);\n      |                    ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:138:13: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]\n  138 |         int m = ti ? ti->tm_mon + 1 : 1;\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:138:17: warning: implicit conversion 'struct tm *' -> 'bool' [readability-implicit-bool-conversion]\n  138 |         int m = ti ? ti->tm_mon + 1 : 1;\n      |                 ^\n      |                 (  != nullptr)\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:139:9: warning: variable 'rainy' of type 'bool' can be declared 'const' [misc-const-correctness]\n  139 |         bool rainy = (m == 4 || m == 5 || m == 6 || m == 10);\n      |         ^\n      |              const \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:163:13: warning: repeated branch body in conditional chain [bugprone-branch-clone]\n  163 |             {                                       // Лето\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:167:14: note: end of the original\n  167 |             }\n      |              ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:175:13: note: clone 1 starts here\n  175 |             {                                       // Зима\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:184:13: warning: repeated branch body in conditional chain [bugprone-branch-clone]\n  184 |             {                                       // Весна\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:188:14: note: end of the original\n  188 |             }\n      |              ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:196:13: note: clone 1 starts here\n  196 |             {                                       // Осень\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:190:13: warning: repeated branch body in conditional chain [bugprone-branch-clone]\n  190 |             {                                       // Лето\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:194:14: note: end of the original\n  194 |             }\n      |              ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:202:13: note: clone 1 starts here\n  202 |             {                                       // Зима\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:245:13: warning: function 'handleProfileSave' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  245 | static void handleProfileSave()\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:250:34: warning: statement should be inside braces [readability-braces-around-statements]\n  250 |         if (profileStr == \"sand\")\n      |                                  ^\n      |                                   {\n  251 |             config.soilProfile = 0;\n  252 |         else if (profileStr == \"loam\")\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:252:39: warning: statement should be inside braces [readability-braces-around-statements]\n  252 |         else if (profileStr == \"loam\")\n      |                                       ^\n      |                                        {\n  253 |             config.soilProfile = 1;\n  254 |         else if (profileStr == \"peat\")\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:254:39: warning: statement should be inside braces [readability-braces-around-statements]\n  254 |         else if (profileStr == \"peat\")\n      |                                       ^\n      |                                        {\n  255 |             config.soilProfile = 2;\n  256 |         else if (profileStr == \"clay\")\n      |         } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:256:39: warning: statement should be inside braces [readability-braces-around-statements]\n  256 |         else if (profileStr == \"clay\")\n      |                                       ^\n      |                                        {\n  257 |             config.soilProfile = 3;\n      |                                    \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:272:64: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  272 |         webServer.send(HTTP_FORBIDDEN, HTTP_CONTENT_TYPE_JSON, \"{\\\"error\\\":\\\"AP mode\\\"}\");\n      |                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                                R\"({\"error\":\"AP mode\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:293:5: warning: variable 'rec' of type 'RecValues' can be declared 'const' [misc-const-correctness]\n  293 |     RecValues rec = computeRecommendations();\n      |     ^\n      |               const \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:323:46: warning: statement should be inside braces [readability-braces-around-statements]\n  323 |                 if (now < NTP_TIMESTAMP_2000) return \"Н/Д\";\n      |                                              ^             \n      |                                               {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:330:20: warning: variable name 'ti' is too short, expected at least 3 characters [readability-identifier-length]\n  330 |         struct tm* ti = localtime(&now);\n      |                    ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:331:17: warning: statement should be inside braces [readability-braces-around-statements]\n  331 |         if (!ti) return \"Н/Д\";\n      |                 ^             \n      |                  {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:332:17: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]\n  332 |         uint8_t m = ti->tm_mon + 1;\n      |                 ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:333:41: warning: statement should be inside braces [readability-braces-around-statements]\n  333 |         if (m == 12 || m == 1 || m == 2) return \"Зима\";\n      |                                         ^              \n      |                                          {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:334:30: warning: statement should be inside braces [readability-braces-around-statements]\n  334 |         if (m >= 3 && m <= 5) return \"Весна\";\n      |                              ^               \n      |                               {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:335:30: warning: statement should be inside braces [readability-braces-around-statements]\n  335 |         if (m >= 6 && m <= 8) return \"Лето\";\n      |                              ^              \n      |                               {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:344:29: warning: statement should be inside braces [readability-braces-around-statements]\n  344 |         if (alerts.length()) alerts += \", \";\n      |                             ^               \n      |                              {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:348:92: warning: statement should be inside braces [readability-braces-around-statements]\n  348 |     if (sensorData.temperature < TEMP_MIN_VALID || sensorData.temperature > TEMP_MAX_VALID) append(\"T\");\n      |                                                                                            ^            \n      |                                                                                             {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:349:84: warning: statement should be inside braces [readability-braces-around-statements]\n  349 |     if (sensorData.humidity < HUM_MIN_VALID || sensorData.humidity > HUM_MAX_VALID) append(\"θ\");\n      |                                                                                    ^            \n      |                                                                                     {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:350:59: warning: statement should be inside braces [readability-braces-around-statements]\n  350 |     if (sensorData.ec < 0 || sensorData.ec > EC_MAX_VALID) append(\"EC\");\n      |                                                           ^             \n      |                                                            {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:351:48: warning: statement should be inside braces [readability-braces-around-statements]\n  351 |     if (sensorData.ph < 3 || sensorData.ph > 9) append(\"pH\");\n      |                                                ^             \n      |                                                 {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:352:72: warning: statement should be inside braces [readability-braces-around-statements]\n  352 |     if (sensorData.nitrogen < 0 || sensorData.nitrogen > NPK_MAX_VALID) append(\"N\");\n      |                                                                        ^            \n      |                                                                         {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:353:76: warning: statement should be inside braces [readability-braces-around-statements]\n  353 |     if (sensorData.phosphorus < 0 || sensorData.phosphorus > NPK_MAX_VALID) append(\"P\");\n      |                                                                            ^            \n      |                                                                             {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:354:74: warning: statement should be inside braces [readability-braces-around-statements]\n  354 |     if (sensorData.potassium < 0 || sensorData.potassium > NPK_MAX_VALID) append(\"K\");\n      |                                                                          ^            \n      |                                                                           {\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:434:29: warning: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length]\n  434 |                 const char* id = config.cropId;\n      |                             ^\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:435:47: warning: statement should be inside braces [readability-braces-around-statements]\n  435 |                 if (strcmp(id, \"tomato\") == 0)\n      |                                               ^\n      |                                                {\n  436 |                     recHeader = \"Томаты\";\n  437 |                 else if (strcmp(id, \"cucumber\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:437:54: warning: statement should be inside braces [readability-braces-around-statements]\n  437 |                 else if (strcmp(id, \"cucumber\") == 0)\n      |                                                      ^\n      |                                                       {\n  438 |                     recHeader = \"Огурцы\";\n  439 |                 else if (strcmp(id, \"pepper\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:439:52: warning: statement should be inside braces [readability-braces-around-statements]\n  439 |                 else if (strcmp(id, \"pepper\") == 0)\n      |                                                    ^\n      |                                                     {\n  440 |                     recHeader = \"Перец\";\n  441 |                 else if (strcmp(id, \"lettuce\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:441:53: warning: statement should be inside braces [readability-braces-around-statements]\n  441 |                 else if (strcmp(id, \"lettuce\") == 0)\n      |                                                     ^\n      |                                                      {\n  442 |                     recHeader = \"Салат\";\n  443 |                 else if (strcmp(id, \"blueberry\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:443:55: warning: statement should be inside braces [readability-braces-around-statements]\n  443 |                 else if (strcmp(id, \"blueberry\") == 0)\n      |                                                       ^\n      |                                                        {\n  444 |                     recHeader = \"Голубика\";\n  445 |                 else if (strcmp(id, \"lawn\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:445:50: warning: statement should be inside braces [readability-braces-around-statements]\n  445 |                 else if (strcmp(id, \"lawn\") == 0)\n      |                                                  ^\n      |                                                   {\n  446 |                     recHeader = \"Газон\";\n  447 |                 else if (strcmp(id, \"grape\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:447:51: warning: statement should be inside braces [readability-braces-around-statements]\n  447 |                 else if (strcmp(id, \"grape\") == 0)\n      |                                                   ^\n      |                                                    {\n  448 |                     recHeader = \"Виноград\";\n  449 |                 else if (strcmp(id, \"conifer\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:449:53: warning: statement should be inside braces [readability-braces-around-statements]\n  449 |                 else if (strcmp(id, \"conifer\") == 0)\n      |                                                     ^\n      |                                                      {\n  450 |                     recHeader = \"Хвойные\";\n  451 |                 else if (strcmp(id, \"strawberry\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:451:56: warning: statement should be inside braces [readability-braces-around-statements]\n  451 |                 else if (strcmp(id, \"strawberry\") == 0)\n      |                                                        ^\n      |                                                         {\n  452 |                     recHeader = \"Клубника\";\n  453 |                 else if (strcmp(id, \"apple\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:453:51: warning: statement should be inside braces [readability-braces-around-statements]\n  453 |                 else if (strcmp(id, \"apple\") == 0)\n      |                                                   ^\n      |                                                    {\n  454 |                     recHeader = \"Яблоня\";\n  455 |                 else if (strcmp(id, \"pear\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:455:50: warning: statement should be inside braces [readability-braces-around-statements]\n  455 |                 else if (strcmp(id, \"pear\") == 0)\n      |                                                  ^\n      |                                                   {\n  456 |                     recHeader = \"Груша\";\n  457 |                 else if (strcmp(id, \"cherry\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:457:52: warning: statement should be inside braces [readability-braces-around-statements]\n  457 |                 else if (strcmp(id, \"cherry\") == 0)\n      |                                                    ^\n      |                                                     {\n  458 |                     recHeader = \"Вишня\";\n  459 |                 else if (strcmp(id, \"raspberry\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:459:55: warning: statement should be inside braces [readability-braces-around-statements]\n  459 |                 else if (strcmp(id, \"raspberry\") == 0)\n      |                                                       ^\n      |                                                        {\n  460 |                     recHeader = \"Малина\";\n  461 |                 else if (strcmp(id, \"currant\") == 0)\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:461:53: warning: statement should be inside braces [readability-braces-around-statements]\n  461 |                 else if (strcmp(id, \"currant\") == 0)\n      |                                                     ^\n      |                                                      {\n  462 |                     recHeader = \"Смородина\";\n      |                                             \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:494:13: warning: variable 'csvPresent' of type 'bool' can be declared 'const' [misc-const-correctness]\n  494 |             bool csvPresent = CalibrationManager::hasTable(SoilProfile::SAND);  // custom.csv\n      |             ^\n      |                  const \nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:683:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  683 |             html += \"var seasonHtml=seasonColor?(`<span class=\\\\\\\"${seasonColor}\\\\\\\">${d.season}</span>`):d.season;\";\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     R\"(var seasonHtml=seasonColor?(`<span class=\\\"${seasonColor}\\\">${d.season}</span>`):d.season;)\"\nC:\\Git\\JXCT\\src\\web\\routes_data.cpp:757:22: warning: variable 'removed' of type 'bool' can be declared 'const' [misc-const-correctness]\n  757 |                      bool removed = CalibrationManager::deleteTable(SoilProfile::SAND);\n      |                      ^\n      |                           const \n",
    "stderr": "468 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_data.cpp.\n"
  },
  {
    "file": "src/web/routes_main.cpp",
    "returncode": 1,
    "stdout": "error: too many errors emitted, stopping now [clang-diagnostic-error]\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:53:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n   53 |     uint16_t mqttPort;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:58:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   58 |     uint8_t mqttQos;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:63:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n   63 |     uint16_t thingspeakInterval;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:72:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   72 |     uint32_t ntpUpdateInterval;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:75:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   75 |     uint8_t modbusId;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:81:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   81 |     uint32_t sensorReadInterval;   // Интервал опроса датчика (1-300 сек, по умолчанию 1 сек)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:82:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   82 |     uint32_t mqttPublishInterval;  // Интервал MQTT публикации (1-60 мин)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:83:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   83 |     uint32_t thingSpeakInterval;   // Интервал ThingSpeak (5-120 мин)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:84:5: error: unknown type name 'uint32_t' [clang-diagnostic-error]\n   84 |     uint32_t webUpdateInterval;    // Интервал обновления веб-интерфейса (5-60 сек)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:94:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   94 |     uint8_t movingAverageWindow;   // Размер окна (5-15 измерений)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:95:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   95 |     uint8_t forcePublishCycles;    // Принудительная публикация (5-50 циклов)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:96:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   96 |     uint8_t filterAlgorithm;       // 0=среднее, 1=медиана\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:97:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n   97 |     uint8_t outlierFilterEnabled;  // 0=отключен, 1=включен (>2σ)\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:100:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  100 |     uint8_t soilProfile;  // 0 = sand, 1 = loam, 2 = peat\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:109:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n  109 |     uint16_t irrigationHoldMinutes;      // мин удержания повышенной влажности\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:110:5: error: unknown type name 'uint16_t' [clang-diagnostic-error]\n  110 |     uint16_t postIrrigationHoldMinutes;  // мин игнорировать коррекцию после полива\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:113:5: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  113 |     uint8_t environmentType;\n      |     ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:118:9: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  118 |         uint8_t hassEnabled : 1;            // 1 бит вместо 1 байта\n      |         ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_config_vars.h:119:9: error: unknown type name 'uint8_t' [clang-diagnostic-error]\n  119 |         uint8_t useRealSensor : 1;          // 1 бит вместо 1 байта\n      |         ^\nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:91:50: warning: statement should be inside braces [readability-braces-around-statements]\n   91 |                 if (webServer.hasArg(\"env_type\"))\n      |                                                  ^\n      |                                                   {\n   92 |                     config.environmentType = webServer.arg(\"env_type\").toInt();\n   93 |                 else\n      |                 } \nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:93:21: warning: statement should be inside braces [readability-braces-around-statements]\n   93 |                 else\n      |                     ^\n      |                      {\n   94 |                     config.environmentType = 0;\n      |                                                \nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:101:50: warning: statement should be inside braces [readability-braces-around-statements]\n  101 |                 if (webServer.hasArg(\"latitude\")) config.latitude = webServer.arg(\"latitude\").toFloat();\n      |                                                  ^                                                      \n      |                                                   {\nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:102:51: warning: statement should be inside braces [readability-braces-around-statements]\n  102 |                 if (webServer.hasArg(\"longitude\")) config.longitude = webServer.arg(\"longitude\").toFloat();\n      |                                                   ^                                                        \n      |                                                    {\nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:104:46: warning: statement should be inside braces [readability-braces-around-statements]\n  104 |                 if (webServer.hasArg(\"crop\"))\n      |                                              ^\n      |                                               {\n  105 |                     strlcpy(config.cropId, webServer.arg(\"crop\").c_str(), sizeof(config.cropId));\n      |                                                                                                  \nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:116:50: warning: statement should be inside braces [readability-braces-around-statements]\n  116 |                 if (webServer.hasArg(\"irrig_th\")) config.irrigationSpikeThreshold = webServer.arg(\"irrig_th\").toFloat();\n      |                                                  ^                                                                      \n      |                                                   {\nC:\\Git\\JXCT\\src\\web\\routes_main.cpp:117:52: warning: statement should be inside braces [readability-braces-around-statements]\n  117 |                 if (webServer.hasArg(\"irrig_hold\")) config.irrigationHoldMinutes = webServer.arg(\"irrig_hold\").toInt();\n      |                                                    ^                                                                   \n      |                                                     {\n",
    "stderr": "378 warnings and 20 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_main.cpp.\n"
  },
  {
    "file": "src/web/routes_ota.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\web\\routes_ota.cpp:2:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    2 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:14:18: warning: redundant 'webServer' declaration [readability-redundant-declaration]\n   14 | extern WebServer webServer;\n      | ~~~~~~~~~~~~~~~~~^~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include/web_routes.h:7:18: note: previously declared here\n    7 | extern WebServer webServer;\n      |                  ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:15:17: warning: redundant 'currentWiFiMode' declaration [readability-redundant-declaration]\n   15 | extern WiFiMode currentWiFiMode;\n      | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include\\../src/wifi_manager.h:19:17: note: previously declared here\n   19 | extern WiFiMode currentWiFiMode;\n      |                 ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:19:13: warning: variable 'isLocalUploadActive' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   19 | static bool isLocalUploadActive = false;\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:20:15: warning: variable 'localUploadProgress' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   20 | static size_t localUploadProgress = 0;\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:21:15: warning: variable 'localUploadTotal' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   21 | static size_t localUploadTotal = 0;\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:22:15: warning: variable 'localUploadStatus' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   22 | static String localUploadStatus = \"idle\";\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:25:13: warning: function 'sendOtaStatusJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   25 | static void sendOtaStatusJson();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:26:13: warning: function 'handleFirmwareUpload' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   26 | static void handleFirmwareUpload();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:42:81: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n   42 |                          webServer.send(HTTP_FORBIDDEN, HTTP_CONTENT_TYPE_JSON, \"{\\\"error\\\":\\\"unavailable\\\"}\");\n      |                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                                                 R\"({\"error\":\"unavailable\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:56:81: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n   56 |                          webServer.send(HTTP_FORBIDDEN, HTTP_CONTENT_TYPE_JSON, \"{\\\"error\\\":\\\"unavailable\\\"}\");\n      |                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                                                 R\"({\"error\":\"unavailable\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:340:13: warning: function 'sendOtaStatusJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  340 | static void sendOtaStatusJson()\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:349:13: warning: variable 'percent' of type 'int' can be declared 'const' [misc-const-correctness]\n  349 |             int percent = (localUploadProgress * 100) / localUploadTotal;\n      |             ^\n      |                 const \nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:349:27: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]\n  349 |             int percent = (localUploadProgress * 100) / localUploadTotal;\n      |                           ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:372:13: warning: function 'handleFirmwareUpload' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  372 | static void handleFirmwareUpload()\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:438:65: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  438 |                 webServer.send(HTTP_OK, HTTP_CONTENT_TYPE_JSON, \"{\\\"ok\\\":false,\\\"error\\\":\\\"not_finished\\\"}\");\n      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                                 R\"({\"ok\":false,\"error\":\"not_finished\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:447:61: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  447 |             webServer.send(HTTP_OK, HTTP_CONTENT_TYPE_JSON, \"{\\\"ok\\\":false,\\\"error\\\":\\\"end_failed\\\"}\");\n      |                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                             R\"({\"ok\":false,\"error\":\"end_failed\"})\"\nC:\\Git\\JXCT\\src\\web\\routes_ota.cpp:456:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]\n  456 |         webServer.send(HTTP_OK, HTTP_CONTENT_TYPE_JSON, \"{\\\"ok\\\":false,\\\"error\\\":\\\"aborted\\\"}\");\n      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                                         R\"({\"ok\":false,\"error\":\"aborted\"})\"\n",
    "stderr": "390 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_ota.cpp.\n"
  },
  {
    "file": "src/web/routes_reports.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\web\\routes_reports.cpp:1:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    1 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:32:20: warning: variable 'lastTestSummary' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   32 | static TestSummary lastTestSummary;\n      |                    ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:33:29: warning: variable 'lastTechDebt' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   33 | static TechnicalDebtMetrics lastTechDebt;\n      |                             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:34:22: warning: variable 'lastReportUpdate' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   34 | static unsigned long lastReportUpdate = 0;\n      |                      ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:38:13: warning: function 'loadTestReport' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   38 | static bool loadTestReport(const String& filename, TestSummary& summary);\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:39:13: warning: function 'loadTechDebtReport' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   39 | static bool loadTechDebtReport(const String& filename, TechnicalDebtMetrics& debt);\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:40:13: warning: function 'updateReportsCache' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   40 | static void updateReportsCache();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:41:15: warning: function 'generateReportsHTML' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   41 | static String generateReportsHTML();\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:42:15: warning: function 'generateReportsDashboardHTML' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   42 | static String generateReportsDashboardHTML();\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:143:13: warning: function 'loadTestReport' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  143 | static bool loadTestReport(const String& filename, TestSummary& summary)\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:180:13: warning: function 'loadTechDebtReport' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  180 | static bool loadTechDebtReport(const String& filename, TechnicalDebtMetrics& debt)\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:221:13: warning: function 'updateReportsCache' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  221 | static void updateReportsCache()\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:223:5: warning: variable 'now' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  223 |     unsigned long now = millis();\n      |     ^\n      |                   const \nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:234:15: warning: function 'generateReportsHTML' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  234 | static String generateReportsHTML()\n      |               ^\nC:\\Git\\JXCT\\src\\web\\routes_reports.cpp:362:15: warning: function 'generateReportsDashboardHTML' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n  362 | static String generateReportsDashboardHTML()\n      |               ^\n",
    "stderr": "382 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_reports.cpp.\n"
  },
  {
    "file": "src/web/routes_service.cpp",
    "returncode": 1,
    "stdout": "C:\\Git\\JXCT\\src\\web\\routes_service.cpp:7:10: error: 'ArduinoJson.h' file not found [clang-diagnostic-error]\n    7 | #include <ArduinoJson.h>\n      |          ^~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:21:18: warning: redundant 'webServer' declaration [readability-redundant-declaration]\n   21 | extern WebServer webServer;\n      | ~~~~~~~~~~~~~~~~~^~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include/web_routes.h:7:18: note: previously declared here\n    7 | extern WebServer webServer;\n      |                  ^\nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:22:17: warning: redundant 'currentWiFiMode' declaration [readability-redundant-declaration]\n   22 | extern WiFiMode currentWiFiMode;\n      | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\../../include\\../src/wifi_manager.h:19:17: note: previously declared here\n   19 | extern WiFiMode currentWiFiMode;\n      |                 ^\nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:36:13: warning: function 'sendHealthJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   36 | static void sendHealthJson();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:37:13: warning: function 'sendServiceStatusJson' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]\n   37 | static void sendServiceStatusJson();\n      |             ^\nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:213:8: warning: function 'formatUptime' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  213 | String formatUptime(unsigned long milliseconds)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\routes_service.cpp:218:5: warning: variable 'days' of type 'unsigned long' can be declared 'const' [misc-const-correctness]\n  218 |     unsigned long days = hours / HOURS_IN_DAY;\n      |     ^\n      |                   const \n",
    "stderr": "391 warnings and 1 error generated.\nError while processing C:\\Git\\JXCT\\src\\web\\routes_service.cpp.\n"
  },
  {
    "file": "src/web/web_templates.cpp",
    "returncode": 1,
    "stdout": "error: too many errors emitted, stopping now [clang-diagnostic-error]\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_constants.h:166:11: error: unknown type name 'UBaseType_t' [clang-diagnostic-error]\n  166 | constexpr UBaseType_t SENSOR_TASK_PRIORITY = 2;\n      |           ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_constants.h:167:11: error: unknown type name 'UBaseType_t' [clang-diagnostic-error]\n  167 | constexpr UBaseType_t RESET_BUTTON_TASK_PRIORITY = 1;\n      |           ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_constants.h:168:11: error: unknown type name 'UBaseType_t' [clang-diagnostic-error]\n  168 | constexpr UBaseType_t WEB_SERVER_TASK_PRIORITY = 1;\n      |           ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_ui_system.h:63:25: error: no type named 'uint8_t' in namespace 'std'; did you mean simply 'uint8_t'? [clang-diagnostic-error]\n   63 | enum class ButtonType : std::uint8_t\n      |                         ^~~~~~~~~~~~\n      |                         uint8_t\nC:\\Program Files\\LLVM\\lib\\clang\\20\\include\\stdint.h:270:24: note: 'uint8_t' declared here\n  270 | typedef __UINT8_TYPE__ uint8_t;\n      |                        ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_ui_system.h:73:26: error: no type named 'uint8_t' in namespace 'std'; did you mean simply 'uint8_t'? [clang-diagnostic-error]\n   73 | enum class MessageType : std::uint8_t\n      |                          ^~~~~~~~~~~~\n      |                          uint8_t\nC:\\Program Files\\LLVM\\lib\\clang\\20\\include\\stdint.h:270:24: note: 'uint8_t' declared here\n  270 | typedef __UINT8_TYPE__ uint8_t;\n      |                        ^\nC:\\Git\\JXCT\\src\\web\\../../include/jxct_ui_system.h:85:1: error: unknown type name 'String' [clang-diagnostic-error]\n   85 | String generateButton(ButtonType type, const char* icon, const char* text, const char* action = \"\");\n      | ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:9:8: warning: function 'generatePageHeader' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n    9 | String generatePageHeader(const String& title, const String& icon)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:9:27: warning: 2 adjacent parameters of 'generatePageHeader' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n    9 | String generatePageHeader(const String& title, const String& icon)\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:9:41: note: the first parameter in the range is 'title'\n    9 | String generatePageHeader(const String& title, const String& icon)\n      |                                         ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:9:62: note: the last parameter in the range is 'icon'\n    9 | String generatePageHeader(const String& title, const String& icon)\n      |                                                              ^~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:20:8: warning: function 'generatePageFooter' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   20 | String generatePageFooter()\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:25:8: warning: function 'generateBasePage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   25 | String generateBasePage(const String& title, const String& content, const String& icon)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:25:25: warning: 3 adjacent parameters of 'generateBasePage' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   25 | String generateBasePage(const String& title, const String& content, const String& icon)\n      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:25:39: note: the first parameter in the range is 'title'\n   25 | String generateBasePage(const String& title, const String& content, const String& icon)\n      |                                       ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:25:83: note: the last parameter in the range is 'icon'\n   25 | String generateBasePage(const String& title, const String& content, const String& icon)\n      |                                                                                   ^~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:34:8: warning: function 'generateErrorPage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   34 | String generateErrorPage(int errorCode, const String& errorMessage)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:34:26: warning: 2 adjacent parameters of 'generateErrorPage' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   34 | String generateErrorPage(int errorCode, const String& errorMessage)\n      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:34:30: note: the first parameter in the range is 'errorCode'\n   34 | String generateErrorPage(int errorCode, const String& errorMessage)\n      |                              ^~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:34:55: note: the last parameter in the range is 'errorMessage'\n   34 | String generateErrorPage(int errorCode, const String& errorMessage)\n      |                                                       ^~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:34:41: note: 'int' and 'const int &' parameters accept and bind the same kind of values\n   34 | String generateErrorPage(int errorCode, const String& errorMessage)\n      |                                         ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:43:8: warning: function 'generateSuccessPage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   43 | String generateSuccessPage(const String& title, const String& message, const String& redirectUrl, int redirectDelay)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:43:28: warning: 4 adjacent parameters of 'generateSuccessPage' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   43 | String generateSuccessPage(const String& title, const String& message, const String& redirectUrl, int redirectDelay)\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:43:42: note: the first parameter in the range is 'title'\n   43 | String generateSuccessPage(const String& title, const String& message, const String& redirectUrl, int redirectDelay)\n      |                                          ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:43:103: note: the last parameter in the range is 'redirectDelay'\n   43 | String generateSuccessPage(const String& title, const String& message, const String& redirectUrl, int redirectDelay)\n      |                                                                                                       ^~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:43:99: note: 'const int &' and 'int' parameters accept and bind the same kind of values\n   43 | String generateSuccessPage(const String& title, const String& message, const String& redirectUrl, int redirectDelay)\n      |                                                                                                   ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:67:8: warning: function 'generateForm' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   67 | String generateForm(const String& action, const String& method, const String& formContent, const String& buttonText,\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:67:21: warning: 5 adjacent parameters of 'generateForm' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   67 | String generateForm(const String& action, const String& method, const String& formContent, const String& buttonText,\n      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   68 |                     const String& buttonIcon)\n      |                     ~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:67:35: note: the first parameter in the range is 'action'\n   67 | String generateForm(const String& action, const String& method, const String& formContent, const String& buttonText,\n      |                                   ^~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:68:35: note: the last parameter in the range is 'buttonIcon'\n   68 |                     const String& buttonIcon)\n      |                                   ^~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:84:8: warning: function 'generateConfigSection' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n   84 | String generateConfigSection(const String& title, const String& content, const String& helpText)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:84:30: warning: 3 adjacent parameters of 'generateConfigSection' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n   84 | String generateConfigSection(const String& title, const String& content, const String& helpText)\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:84:44: note: the first parameter in the range is 'title'\n   84 | String generateConfigSection(const String& title, const String& content, const String& helpText)\n      |                                            ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:84:88: note: the last parameter in the range is 'helpText'\n   84 | String generateConfigSection(const String& title, const String& content, const String& helpText)\n      |                                                                                        ^~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:108:8: warning: function 'generateInputField' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  108 | String generateInputField(const String& id, const String& name, const String& label, const String& value,\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:108:27: warning: 5 adjacent parameters of 'generateInputField' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  108 | String generateInputField(const String& id, const String& name, const String& label, const String& value,\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  109 |                           const String& type, bool required, const String& placeholder)\n      |                           ~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:108:41: note: the first parameter in the range is 'id'\n  108 | String generateInputField(const String& id, const String& name, const String& label, const String& value,\n      |                                         ^~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:109:41: note: the last parameter in the range is 'type'\n  109 |                           const String& type, bool required, const String& placeholder)\n      |                                         ^~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:108:41: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]\n  108 | String generateInputField(const String& id, const String& name, const String& label, const String& value,\n      |                                         ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:134:8: warning: function 'generateCheckboxField' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  134 | String generateCheckboxField(const String& id, const String& name, const String& label, bool checked)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:134:30: warning: 3 adjacent parameters of 'generateCheckboxField' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  134 | String generateCheckboxField(const String& id, const String& name, const String& label, bool checked)\n      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:134:44: note: the first parameter in the range is 'id'\n  134 | String generateCheckboxField(const String& id, const String& name, const String& label, bool checked)\n      |                                            ^~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:134:82: note: the last parameter in the range is 'label'\n  134 | String generateCheckboxField(const String& id, const String& name, const String& label, bool checked)\n      |                                                                                  ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:134:44: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]\n  134 | String generateCheckboxField(const String& id, const String& name, const String& label, bool checked)\n      |                                            ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:8: warning: function 'generateNumberField' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:28: warning: 5 adjacent parameters of 'generateNumberField' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:42: note: the first parameter in the range is 'id'\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |                                          ^~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:102: note: the last parameter in the range is 'min'\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |                                                                                                      ^~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:87: note: 'const int &' and 'int' parameters accept and bind the same kind of values\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |                                                                                       ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:158:42: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]\n  158 | String generateNumberField(const String& id, const String& name, const String& label, int value, int min, int max,\n      |                                          ^\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:174:8: warning: function 'generateFormError' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  174 | String generateFormError(const String& message)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:185:8: warning: function 'generateApModeUnavailablePage' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]\n  185 | String generateApModeUnavailablePage(const String& title, const String& icon)\n      |        ^\n      | static \nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:185:38: warning: 2 adjacent parameters of 'generateApModeUnavailablePage' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]\n  185 | String generateApModeUnavailablePage(const String& title, const String& icon)\n      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:185:52: note: the first parameter in the range is 'title'\n  185 | String generateApModeUnavailablePage(const String& title, const String& icon)\n      |                                                    ^~~~~\nC:\\Git\\JXCT\\src\\web\\web_templates.cpp:185:73: note: the last parameter in the range is 'icon'\n  185 | String generateApModeUnavailablePage(const String& title, const String& icon)\n      |                                                                         ^~~~\ntest/stubs\\WebServer.h:18:5: error: unknown type name 'String' [clang-diagnostic-error]\n   18 |     String toString() const\n      |     ^\ntest/stubs\\WebServer.h:20:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   20 |         return String(\"127.0.0.1\");\n      |                ^\ntest/stubs\\WebServer.h:37:23: error: unknown type name 'String' [clang-diagnostic-error]\n   37 |     bool hasArg(const String&) const\n      |                       ^\ntest/stubs\\WebServer.h:41:5: error: unknown type name 'String' [clang-diagnostic-error]\n   41 |     String arg(const String&) const\n      |     ^\ntest/stubs\\WebServer.h:41:22: error: unknown type name 'String' [clang-diagnostic-error]\n   41 |     String arg(const String&) const\n      |                      ^\ntest/stubs\\WebServer.h:43:16: error: use of undeclared identifier 'String' [clang-diagnostic-error]\n   43 |         return String(\"\");\n      |                ^\ntest/stubs\\WebServer.h:45:26: error: unknown type name 'String' [clang-diagnostic-error]\n   45 |     bool hasHeader(const String&) const\n      |                          ^\ntest/stubs\\WebServer.h:49:5: error: unknown type name 'String' [clang-diagnostic-error]\n   49 |     String header(const String&) const\n      |     ^\ntest/stubs\\WebServer.h:49:25: error: unknown type name 'String' [clang-diagnostic-error]\n   49 |     String header(const String&) const\n      |                         ^\ntest/stubs\\WebServer.h:57:5: error: unknown type name 'String' [clang-diagnostic-error]\n   57 |     String uri() const\n      |     ^\ntest/stubs\\WebServer.h:65:39: error: unknown type name 'String' [clang-diagnostic-error]\n   65 |     void send(int, const char*, const String&) {}\n      |                                       ^\ntest/stubs\\WebServer.h:66:27: error: unknown type name 'String' [clang-diagnostic-error]\n   66 |     void sendHeader(const String&, const String&, bool = false) {}\n      |                           ^\ntest/stubs\\WebServer.h:66:42: error: unknown type name 'String' [clang-diagnostic-error]\n   66 |     void sendHeader(const String&, const String&, bool = false) {}\n      |                                          ^\n",
    "stderr": "352 warnings and 20 errors generated.\nError while processing C:\\Git\\JXCT\\src\\web\\web_templates.cpp.\n"
  }
]