# JXCT Release Manager - PowerShell wrapper
# –¢–æ–ª—å–∫–æ –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è scripts/release_manager.py

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("version", "release", "bump", "sync")]
    [string]$Command,
    
    [Parameter(Mandatory=$false)]
    [string]$Version,
    
    [Parameter(Mandatory=$false)]
    [ValidateSet("major", "minor", "patch")]
    [string]$Type,
    
    [Parameter(Mandatory=$false)]
    [string]$Message,
    
    [Parameter(Mandatory=$false)]
    [switch]$NoPush,
    
    [Parameter(Mandatory=$false)]
    [switch]$NoCommit,
    
    [Parameter(Mandatory=$false)]
    [string]$ProjectDir
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∏ Git
function Test-Python {
    try { python --version | Out-Null; return $true } catch { return $false }
}
function Test-Git {
    try { git --version | Out-Null; return $true } catch { return $false }
}

if (-not (Test-Python)) { 
    Write-Host "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ PATH" -ForegroundColor Red
    exit 1 
}
if (-not (Test-Git)) { 
    Write-Host "‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ PATH" -ForegroundColor Red
    exit 1 
}

# –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
$args = @($Command)
if ($Version) { $args += '--version'; $args += $Version }
if ($Type) { $args += '--type'; $args += $Type }
if ($Message) { $args += '--message'; $args += $Message }
if ($NoPush) { $args += '--no-push' }
if ($NoCommit) { $args += '--no-commit' }
if ($ProjectDir) { $args += '--project-dir'; $args += $ProjectDir }

# –í—ã–≤–æ–¥–∏–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
Write-Host "üöÄ –í—ã–ø–æ–ª–Ω—è—é: python scripts/release_manager.py $($args -join ' ')" -ForegroundColor Cyan

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
python scripts/release_manager.py @args 