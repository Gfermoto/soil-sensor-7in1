/**
 * @file logger.h
 * @brief –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */

#ifndef LOGGER_H
#define LOGGER_H

#include <Arduino.h>

// –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
enum LogLevel
{
    LOG_ERROR = 0,
    LOG_WARN = 1,
    LOG_INFO = 2,
    LOG_DEBUG = 3
};

// –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å)
extern LogLevel currentLogLevel;

// –°–∏–º–≤–æ–ª—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
#define LOG_SYMBOL_ERROR "‚ùå"
#define LOG_SYMBOL_WARN "‚ö†Ô∏è "
#define LOG_SYMBOL_INFO "‚ÑπÔ∏è "
#define LOG_SYMBOL_DEBUG "üîß"
#define LOG_SYMBOL_SUCCESS "‚úÖ"
#define LOG_SYMBOL_SENSOR "üì°"
#define LOG_SYMBOL_WIFI "üì∂"
#define LOG_SYMBOL_MQTT "üì§"
#define LOG_SYMBOL_DATA "üìä"
#define LOG_SYMBOL_SYSTEM "‚öôÔ∏è "

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ (ANSI escape codes)
#define COLOR_RESET "\033[0m"
#define COLOR_RED "\033[31m"
#define COLOR_GREEN "\033[32m"
#define COLOR_YELLOW "\033[33m"
#define COLOR_BLUE "\033[34m"
#define COLOR_MAGENTA "\033[35m"
#define COLOR_CYAN "\033[36m"
#define COLOR_WHITE "\033[37m"
#define COLOR_BOLD "\033[1m"

#ifdef NO_ANSI_COLORS
#undef COLOR_RESET
#undef COLOR_RED
#undef COLOR_GREEN
#undef COLOR_YELLOW
#undef COLOR_BLUE
#undef COLOR_MAGENTA
#undef COLOR_CYAN
#undef COLOR_WHITE
#undef COLOR_BOLD
#define COLOR_RESET ""
#define COLOR_RED ""
#define COLOR_GREEN ""
#define COLOR_YELLOW ""
#define COLOR_BLUE ""
#define COLOR_MAGENTA ""
#define COLOR_CYAN ""
#define COLOR_WHITE ""
#define COLOR_BOLD ""
#endif  // NO_ANSI_COLORS

// –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
void logPrintHeader(const char* title, const char* color = COLOR_CYAN);
void logPrintSeparator(const char* symbol = "‚îÄ", int length = 50);
void logPrintBanner(const char* text);

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
void logError(const char* format, ...);
void logWarn(const char* format, ...);
void logInfo(const char* format, ...);
void logDebug(const char* format, ...);
void logSuccess(const char* format, ...);

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
void logSensor(const char* format, ...);
void logWiFi(const char* format, ...);
void logMQTT(const char* format, ...);
void logData(const char* format, ...);
void logSystem(const char* format, ...);

// –£—Ç–∏–ª–∏—Ç—ã
void logUptime();
void logMemoryUsage();
void logWiFiStatus();

#ifdef NO_EMOJI
#undef LOG_SYMBOL_ERROR
#undef LOG_SYMBOL_WARN
#undef LOG_SYMBOL_INFO
#undef LOG_SYMBOL_DEBUG
#undef LOG_SYMBOL_SUCCESS
#define LOG_SYMBOL_ERROR ""
#define LOG_SYMBOL_WARN ""
#define LOG_SYMBOL_INFO ""
#define LOG_SYMBOL_DEBUG ""
#define LOG_SYMBOL_SUCCESS ""
#endif

#endif  // LOGGER_H